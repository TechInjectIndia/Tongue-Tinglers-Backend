{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":2,"status":200,"url":"/"},"timestamp":"2024-11-20T10:03:55.511Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"UserAddress\"\n      },\n      {\n        \"name\": \"Cart\"\n      },\n      {\n        \"name\": \"Admin > Vendors\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Areas\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/user-address\": {\n        \"post\": {\n          \"summary\": \"Create a new user address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"phone\",\n                    \"address\",\n                    \"houseNo\",\n                    \"city\",\n                    \"state\",\n                    \"country\",\n                    \"zipCode\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"gstin\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"User address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/list\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"User address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Area\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Area created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"number\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of Areas retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Areas deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more Areas not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"area\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        100,\n                        200\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list\": {\n        \"get\": {\n          \"summary\": \"Get all region with filtering and pagination\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching regions based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by id.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by title.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"area\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by area.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by createdBy.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only regions marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        150,\n                        250\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more regions not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/empty\": {\n        \"delete\": {\n          \"summary\": \"Empty a Cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart emptied successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart\": {\n        \"get\": {\n          \"summary\": \"Get a Cart for the authenticated user\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/add\": {\n        \"post\": {\n          \"summary\": \"Add a product to the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product added to the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/delete\": {\n        \"delete\": {\n          \"summary\": \"delete a product from the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted from the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product or cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/remove\": {\n        \"put\": {\n          \"summary\": \"remove a product in the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated in the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"company_name\",\n                    \"gst_number\",\n                    \"company_address\",\n                    \"company_email\",\n                    \"company_phone\",\n                    \"first_name\",\n                    \"last_name\",\n                    \"email\",\n                    \"phone\"\n                  ],\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/list\": {\n        \"get\": {\n          \"summary\": \"Get all Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Vendor by ID\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": \"Array of Vendor IDs to delete\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"regionId\",\n                    \"questionList\",\n                    \"start\",\n                    \"to\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test 2\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaign ads with filtering and pagination\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching campaigns based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseId\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by franchise ID.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"region\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by region.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only campaigns marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test Updated\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"min_qty_order\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"vendorId\": {\n                      \"type\": \"string\",\n                      \"example\": \"11112333546\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"min_qty_order\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/create\": {\n        \"post\": {\n          \"summary\": \"Create a new shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"orderId\",\n                    \"shippingData\"\n                  ],\n                  \"properties\": {\n                    \"orderId\": {\n                      \"type\": \"string\",\n                      \"default\": \"order123\"\n                    },\n                    \"shippingData\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"default\": \"2024-11-12\"\n                        },\n                        \"activities\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"status\": {\n                                \"type\": \"string\",\n                                \"default\": \"shipped\"\n                              },\n                              \"trackingNumber\": {\n                                \"type\": \"string\",\n                                \"default\": \"TRACK123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Shipping history created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all shipping history records\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a shipping history record by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/delete/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete a shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to delete\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"categories\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"categories\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModalId\": {\n                      \"type\": \"string\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/search-lead?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/order-payment/callback\": {\n        \"post\": {\n          \"summary\": \"Handle Razorpay payment webhook callback.\",\n          \"description\": \"Receives and verifies webhook payloads from Razorpay.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook processed successfully.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/fetch/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details from Razorpay and local repository.\",\n          \"description\": \"Retrieves payment details by payment ID from Razorpay and the local database.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"description\": \"The ID of the payment to fetch.\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details fetched successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"paymentDetailsFromRazorpay\": {\n                        \"type\": \"object\"\n                      },\n                      \"paymentDetailsFromRepo\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request, missing payment ID.\"\n            },\n            \"404\": {\n              \"description\": \"Payment not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link for the user's cart.\",\n          \"description\": \"Creates a payment link based on the user's cart and franchise data.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/create-payment-intent\": {\n        \"post\": {\n          \"summary\": \"Create a Razorpay payment intent.\",\n          \"description\": \"Generates a payment intent (order) for the user's cart and creates a corresponding order in the system.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment intent created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"proposalData\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"proposalData\": {\n                      \"type\": \"object\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":0,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-20T10:03:55.611Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+911233211231","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":2068,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:08:03.770Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+911233211231","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":2071,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:08:03.772Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+911231231232","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":59,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:08:25.361Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+911231231232","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":60,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:08:25.362Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"Unauthorized Access","success":false},"responseTime":189,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T10:12:45.349Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"Unauthorized Access\",\"data\":null}","responseTime":189,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T10:12:45.349Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+919090909090","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":55,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:12:56.440Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+919090909090","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":56,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:12:56.441Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"Unauthorized Access","success":false},"responseTime":502,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T10:47:11.115Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"Unauthorized Access\",\"data\":null}","responseTime":506,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T10:47:11.119Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+919090909090","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":20,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:47:17.787Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+919090909090","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":22,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:47:17.789Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+911234567891","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":36,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:47:31.982Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"test123","lastName":"user","password":"123456","phoneNumber":"+911234567891","role":0,"status":"active","userName":"Nrghv12"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":37,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:47:31.983Z"}
{"level":"info","message":{"body":{"email":"admin1@gmail.com","firstName":"Admin","lastName":"User","password":"123456","phoneNumber":"+918899776666","role":0,"status":"active","userName":"Admin"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":33,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:48:44.235Z"}
{"level":"info","message":{"body":{"email":"admin1@gmail.com","firstName":"Admin","lastName":"User","password":"123456","phoneNumber":"+918899776666","role":0,"status":"active","userName":"Admin"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":34,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:48:44.236Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":2,"status":200,"url":"/"},"timestamp":"2024-11-20T10:50:55.876Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"UserAddress\"\n      },\n      {\n        \"name\": \"Cart\"\n      },\n      {\n        \"name\": \"Admin > Vendors\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Areas\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/user-address\": {\n        \"post\": {\n          \"summary\": \"Create a new user address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"phone\",\n                    \"address\",\n                    \"houseNo\",\n                    \"city\",\n                    \"state\",\n                    \"country\",\n                    \"zipCode\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"gstin\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"User address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/list\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"User address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Area\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Area created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"number\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of Areas retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Areas deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more Areas not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"area\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        100,\n                        200\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list\": {\n        \"get\": {\n          \"summary\": \"Get all region with filtering and pagination\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching regions based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by id.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by title.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"area\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by area.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by createdBy.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only regions marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        150,\n                        250\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more regions not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/empty\": {\n        \"delete\": {\n          \"summary\": \"Empty a Cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart emptied successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart\": {\n        \"get\": {\n          \"summary\": \"Get a Cart for the authenticated user\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/add\": {\n        \"post\": {\n          \"summary\": \"Add a product to the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product added to the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/delete\": {\n        \"delete\": {\n          \"summary\": \"delete a product from the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted from the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product or cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/remove\": {\n        \"put\": {\n          \"summary\": \"remove a product in the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated in the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"company_name\",\n                    \"gst_number\",\n                    \"company_address\",\n                    \"company_email\",\n                    \"company_phone\",\n                    \"first_name\",\n                    \"last_name\",\n                    \"email\",\n                    \"phone\"\n                  ],\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/list\": {\n        \"get\": {\n          \"summary\": \"Get all Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Vendor by ID\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": \"Array of Vendor IDs to delete\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"regionId\",\n                    \"questionList\",\n                    \"start\",\n                    \"to\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test 2\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaign ads with filtering and pagination\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching campaigns based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseId\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by franchise ID.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"region\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by region.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only campaigns marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test Updated\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"min_qty_order\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"vendorId\": {\n                      \"type\": \"string\",\n                      \"example\": \"11112333546\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"min_qty_order\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/create\": {\n        \"post\": {\n          \"summary\": \"Create a new shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"orderId\",\n                    \"shippingData\"\n                  ],\n                  \"properties\": {\n                    \"orderId\": {\n                      \"type\": \"string\",\n                      \"default\": \"order123\"\n                    },\n                    \"shippingData\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"default\": \"2024-11-12\"\n                        },\n                        \"activities\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"status\": {\n                                \"type\": \"string\",\n                                \"default\": \"shipped\"\n                              },\n                              \"trackingNumber\": {\n                                \"type\": \"string\",\n                                \"default\": \"TRACK123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Shipping history created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all shipping history records\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a shipping history record by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/delete/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete a shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to delete\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"categories\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"categories\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModalId\": {\n                      \"type\": \"string\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/search-lead?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/order-payment/callback\": {\n        \"post\": {\n          \"summary\": \"Handle Razorpay payment webhook callback.\",\n          \"description\": \"Receives and verifies webhook payloads from Razorpay.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook processed successfully.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/fetch/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details from Razorpay and local repository.\",\n          \"description\": \"Retrieves payment details by payment ID from Razorpay and the local database.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"description\": \"The ID of the payment to fetch.\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details fetched successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"paymentDetailsFromRazorpay\": {\n                        \"type\": \"object\"\n                      },\n                      \"paymentDetailsFromRepo\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request, missing payment ID.\"\n            },\n            \"404\": {\n              \"description\": \"Payment not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link for the user's cart.\",\n          \"description\": \"Creates a payment link based on the user's cart and franchise data.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/create-payment-intent\": {\n        \"post\": {\n          \"summary\": \"Create a Razorpay payment intent.\",\n          \"description\": \"Generates a payment intent (order) for the user's cart and creates a corresponding order in the system.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment intent created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"proposalData\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"proposalData\": {\n                      \"type\": \"object\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":1,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-20T10:50:55.928Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":38,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:51:00.276Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":39,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:51:00.277Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":1,"status":200,"url":"/"},"timestamp":"2024-11-20T10:51:13.264Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"UserAddress\"\n      },\n      {\n        \"name\": \"Cart\"\n      },\n      {\n        \"name\": \"Admin > Vendors\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Areas\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/user-address\": {\n        \"post\": {\n          \"summary\": \"Create a new user address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"phone\",\n                    \"address\",\n                    \"houseNo\",\n                    \"city\",\n                    \"state\",\n                    \"country\",\n                    \"zipCode\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"gstin\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"User address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/list\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"User address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Area\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Area created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"number\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of Areas retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Areas deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more Areas not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"area\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        100,\n                        200\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list\": {\n        \"get\": {\n          \"summary\": \"Get all region with filtering and pagination\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching regions based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by id.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by title.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"area\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by area.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by createdBy.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only regions marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        150,\n                        250\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more regions not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/empty\": {\n        \"delete\": {\n          \"summary\": \"Empty a Cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart emptied successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart\": {\n        \"get\": {\n          \"summary\": \"Get a Cart for the authenticated user\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/add\": {\n        \"post\": {\n          \"summary\": \"Add a product to the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product added to the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/delete\": {\n        \"delete\": {\n          \"summary\": \"delete a product from the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted from the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product or cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/remove\": {\n        \"put\": {\n          \"summary\": \"remove a product in the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated in the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"company_name\",\n                    \"gst_number\",\n                    \"company_address\",\n                    \"company_email\",\n                    \"company_phone\",\n                    \"first_name\",\n                    \"last_name\",\n                    \"email\",\n                    \"phone\"\n                  ],\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/list\": {\n        \"get\": {\n          \"summary\": \"Get all Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Vendor by ID\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": \"Array of Vendor IDs to delete\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"regionId\",\n                    \"questionList\",\n                    \"start\",\n                    \"to\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test 2\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaign ads with filtering and pagination\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching campaigns based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseId\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by franchise ID.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"region\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by region.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only campaigns marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test Updated\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"min_qty_order\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"vendorId\": {\n                      \"type\": \"string\",\n                      \"example\": \"11112333546\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"min_qty_order\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/create\": {\n        \"post\": {\n          \"summary\": \"Create a new shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"orderId\",\n                    \"shippingData\"\n                  ],\n                  \"properties\": {\n                    \"orderId\": {\n                      \"type\": \"string\",\n                      \"default\": \"order123\"\n                    },\n                    \"shippingData\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"default\": \"2024-11-12\"\n                        },\n                        \"activities\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"status\": {\n                                \"type\": \"string\",\n                                \"default\": \"shipped\"\n                              },\n                              \"trackingNumber\": {\n                                \"type\": \"string\",\n                                \"default\": \"TRACK123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Shipping history created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all shipping history records\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a shipping history record by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/delete/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete a shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to delete\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"categories\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"categories\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModalId\": {\n                      \"type\": \"string\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/search-lead?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/order-payment/callback\": {\n        \"post\": {\n          \"summary\": \"Handle Razorpay payment webhook callback.\",\n          \"description\": \"Receives and verifies webhook payloads from Razorpay.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook processed successfully.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/fetch/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details from Razorpay and local repository.\",\n          \"description\": \"Retrieves payment details by payment ID from Razorpay and the local database.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"description\": \"The ID of the payment to fetch.\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details fetched successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"paymentDetailsFromRazorpay\": {\n                        \"type\": \"object\"\n                      },\n                      \"paymentDetailsFromRepo\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request, missing payment ID.\"\n            },\n            \"404\": {\n              \"description\": \"Payment not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link for the user's cart.\",\n          \"description\": \"Creates a payment link based on the user's cart and franchise data.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/create-payment-intent\": {\n        \"post\": {\n          \"summary\": \"Create a Razorpay payment intent.\",\n          \"description\": \"Generates a payment intent (order) for the user's cart and creates a corresponding order in the system.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment intent created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"proposalData\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"proposalData\": {\n                      \"type\": \"object\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":1,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-20T10:51:13.356Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":39,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:51:19.890Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":40,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:51:19.891Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":103,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:53:41.986Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":106,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:53:41.989Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":2,"status":200,"url":"/"},"timestamp":"2024-11-20T10:53:43.919Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"UserAddress\"\n      },\n      {\n        \"name\": \"Cart\"\n      },\n      {\n        \"name\": \"Admin > Vendors\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Areas\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/user-address\": {\n        \"post\": {\n          \"summary\": \"Create a new user address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"phone\",\n                    \"address\",\n                    \"houseNo\",\n                    \"city\",\n                    \"state\",\n                    \"country\",\n                    \"zipCode\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"gstin\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"User address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/list\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"User address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Area\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Area created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"number\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of Areas retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Areas deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more Areas not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"area\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        100,\n                        200\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list\": {\n        \"get\": {\n          \"summary\": \"Get all region with filtering and pagination\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching regions based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by id.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by title.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"area\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by area.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by createdBy.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only regions marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        150,\n                        250\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more regions not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/empty\": {\n        \"delete\": {\n          \"summary\": \"Empty a Cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart emptied successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart\": {\n        \"get\": {\n          \"summary\": \"Get a Cart for the authenticated user\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/add\": {\n        \"post\": {\n          \"summary\": \"Add a product to the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product added to the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/delete\": {\n        \"delete\": {\n          \"summary\": \"delete a product from the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted from the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product or cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/remove\": {\n        \"put\": {\n          \"summary\": \"remove a product in the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated in the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"company_name\",\n                    \"gst_number\",\n                    \"company_address\",\n                    \"company_email\",\n                    \"company_phone\",\n                    \"first_name\",\n                    \"last_name\",\n                    \"email\",\n                    \"phone\"\n                  ],\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/list\": {\n        \"get\": {\n          \"summary\": \"Get all Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Vendor by ID\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": \"Array of Vendor IDs to delete\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"regionId\",\n                    \"questionList\",\n                    \"start\",\n                    \"to\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test 2\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaign ads with filtering and pagination\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching campaigns based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseId\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by franchise ID.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"region\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by region.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only campaigns marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test Updated\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"min_qty_order\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"vendorId\": {\n                      \"type\": \"string\",\n                      \"example\": \"11112333546\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"min_qty_order\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/create\": {\n        \"post\": {\n          \"summary\": \"Create a new shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"orderId\",\n                    \"shippingData\"\n                  ],\n                  \"properties\": {\n                    \"orderId\": {\n                      \"type\": \"string\",\n                      \"default\": \"order123\"\n                    },\n                    \"shippingData\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"default\": \"2024-11-12\"\n                        },\n                        \"activities\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"status\": {\n                                \"type\": \"string\",\n                                \"default\": \"shipped\"\n                              },\n                              \"trackingNumber\": {\n                                \"type\": \"string\",\n                                \"default\": \"TRACK123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Shipping history created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all shipping history records\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a shipping history record by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/delete/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete a shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to delete\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"categories\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"categories\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModalId\": {\n                      \"type\": \"string\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/search-lead?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/order-payment/callback\": {\n        \"post\": {\n          \"summary\": \"Handle Razorpay payment webhook callback.\",\n          \"description\": \"Receives and verifies webhook payloads from Razorpay.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook processed successfully.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/fetch/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details from Razorpay and local repository.\",\n          \"description\": \"Retrieves payment details by payment ID from Razorpay and the local database.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"description\": \"The ID of the payment to fetch.\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details fetched successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"paymentDetailsFromRazorpay\": {\n                        \"type\": \"object\"\n                      },\n                      \"paymentDetailsFromRepo\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request, missing payment ID.\"\n            },\n            \"404\": {\n              \"description\": \"Payment not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link for the user's cart.\",\n          \"description\": \"Creates a payment link based on the user's cart and franchise data.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/create-payment-intent\": {\n        \"post\": {\n          \"summary\": \"Create a Razorpay payment intent.\",\n          \"description\": \"Generates a payment intent (order) for the user's cart and creates a corresponding order in the system.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment intent created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"proposalData\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"proposalData\": {\n                      \"type\": \"object\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":0,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-20T10:53:43.961Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:53:50.002Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-20T10:53:50.003Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":154,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:04:30.384Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":158,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:04:30.387Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":101,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:06:46.869Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":105,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:06:46.873Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:06:48.999Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:06:49.000Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":235,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:07:21.028Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":238,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:07:21.031Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:07:25.104Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:07:25.105Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":2,"status":200,"url":"/"},"timestamp":"2024-11-20T11:11:18.131Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"UserAddress\"\n      },\n      {\n        \"name\": \"Cart\"\n      },\n      {\n        \"name\": \"Admin > Vendors\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Areas\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/user-address\": {\n        \"post\": {\n          \"summary\": \"Create a new user address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"phone\",\n                    \"address\",\n                    \"houseNo\",\n                    \"city\",\n                    \"state\",\n                    \"country\",\n                    \"zipCode\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"gstin\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"User address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/list\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"User address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Area\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Area created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"number\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of Areas retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Areas deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more Areas not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"area\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        100,\n                        200\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list\": {\n        \"get\": {\n          \"summary\": \"Get all region with filtering and pagination\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching regions based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by id.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by title.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"area\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by area.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by createdBy.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only regions marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        150,\n                        250\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more regions not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/empty\": {\n        \"delete\": {\n          \"summary\": \"Empty a Cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart emptied successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart\": {\n        \"get\": {\n          \"summary\": \"Get a Cart for the authenticated user\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/add\": {\n        \"post\": {\n          \"summary\": \"Add a product to the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product added to the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/delete\": {\n        \"delete\": {\n          \"summary\": \"delete a product from the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted from the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product or cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/remove\": {\n        \"put\": {\n          \"summary\": \"remove a product in the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated in the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"company_name\",\n                    \"gst_number\",\n                    \"company_address\",\n                    \"company_email\",\n                    \"company_phone\",\n                    \"first_name\",\n                    \"last_name\",\n                    \"email\",\n                    \"phone\"\n                  ],\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/list\": {\n        \"get\": {\n          \"summary\": \"Get all Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Vendor by ID\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": \"Array of Vendor IDs to delete\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"regionId\",\n                    \"questionList\",\n                    \"start\",\n                    \"to\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test 2\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaign ads with filtering and pagination\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching campaigns based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseId\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by franchise ID.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"region\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by region.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only campaigns marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test Updated\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"min_qty_order\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"vendorId\": {\n                      \"type\": \"string\",\n                      \"example\": \"11112333546\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"min_qty_order\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/create\": {\n        \"post\": {\n          \"summary\": \"Create a new shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"orderId\",\n                    \"shippingData\"\n                  ],\n                  \"properties\": {\n                    \"orderId\": {\n                      \"type\": \"string\",\n                      \"default\": \"order123\"\n                    },\n                    \"shippingData\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"default\": \"2024-11-12\"\n                        },\n                        \"activities\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"status\": {\n                                \"type\": \"string\",\n                                \"default\": \"shipped\"\n                              },\n                              \"trackingNumber\": {\n                                \"type\": \"string\",\n                                \"default\": \"TRACK123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Shipping history created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all shipping history records\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a shipping history record by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/delete/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete a shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to delete\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"categories\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"categories\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModalId\": {\n                      \"type\": \"string\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/search-lead?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/order-payment/callback\": {\n        \"post\": {\n          \"summary\": \"Handle Razorpay payment webhook callback.\",\n          \"description\": \"Receives and verifies webhook payloads from Razorpay.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook processed successfully.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/fetch/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details from Razorpay and local repository.\",\n          \"description\": \"Retrieves payment details by payment ID from Razorpay and the local database.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"description\": \"The ID of the payment to fetch.\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details fetched successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"paymentDetailsFromRazorpay\": {\n                        \"type\": \"object\"\n                      },\n                      \"paymentDetailsFromRepo\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request, missing payment ID.\"\n            },\n            \"404\": {\n              \"description\": \"Payment not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link for the user's cart.\",\n          \"description\": \"Creates a payment link based on the user's cart and franchise data.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/create-payment-intent\": {\n        \"post\": {\n          \"summary\": \"Create a Razorpay payment intent.\",\n          \"description\": \"Generates a payment intent (order) for the user's cart and creates a corresponding order in the system.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment intent created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"proposalData\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"proposalData\": {\n                      \"type\": \"object\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":0,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-20T11:11:18.203Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":154,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:11:23.744Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":155,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:11:23.745Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":121,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:13:51.853Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":124,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:13:51.856Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":105,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:14:35.492Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":108,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:14:35.495Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The phone number must be a non-empty E.164 standard compliant identifier string.","success":false},"responseTime":107,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:15:31.641Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The phone number must be a non-empty E.164 standard compliant identifier string.\",\"data\":null}","responseTime":111,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:15:31.644Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The password must be a string with at least 6 characters.","success":false},"responseTime":116,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:17:00.929Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The password must be a string with at least 6 characters.\",\"data\":null}","responseTime":120,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:17:00.933Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":{"data":null,"message":"The password must be a string with at least 6 characters.","success":false},"responseTime":89,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:17:25.532Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"string","lastName":"string","password":"admin","phoneNumber":"string","role":0,"status":"active","userName":"string"},"method":"POST","responseBody":"{\"success\":false,\"message\":\"The password must be a string with at least 6 characters.\",\"data\":null}","responseTime":93,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:17:25.535Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"Nitesh","lastName":"Kumar","password":"123456","phoneNumber":"+919997016578","role":0,"status":"active","userName":"Nkumar"},"method":"POST","responseBody":{"data":null,"message":"Admin user created successfully","success":true},"responseTime":1707,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:18:13.967Z"}
{"level":"info","message":{"body":{"email":"admin@gmail.com","firstName":"Nitesh","lastName":"Kumar","password":"123456","phoneNumber":"+919997016578","role":0,"status":"active","userName":"Nkumar"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Admin user created successfully\",\"data\":null}","responseTime":1710,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:18:13.970Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"permissions":"","phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"},"message":"Admin user fetched successfully","success":true},"responseTime":209,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:18:31.024Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":210,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:18:31.025Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"permissions":"","phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"},"message":"Admin user fetched successfully","success":true},"responseTime":10,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:18:31.038Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":12,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:18:31.040Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:18:32.672Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":24,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:18:32.672Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":25,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:18:32.675Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":27,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:18:32.677Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":30,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:18:32.683Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":31,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:18:32.684Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":32,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:18:32.687Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":33,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:18:32.688Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":34,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:18:32.691Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":35,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:18:32.692Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":37,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:18:32.697Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":38,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:18:32.698Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:18:32.723Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":24,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:18:32.724Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:18:32.726Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":24,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:18:32.727Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":22,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:18:32.729Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:18:32.729Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:18:32.731Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:18:32.731Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:18:32.739Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:18:32.739Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":30,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:18:32.742Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":30,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:18:32.742Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":24,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:18:32.758Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":25,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:18:32.759Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:18:32.769Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":24,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:18:32.770Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":25,"status":200,"url":"/"},"timestamp":"2024-11-20T11:18:32.773Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":25,"status":200,"url":"/"},"timestamp":"2024-11-20T11:18:32.773Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":22,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:18:32.776Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":23,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:18:32.777Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":24,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:18:32.780Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":25,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:18:32.781Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/lead-status?filter=this_month"},"timestamp":"2024-11-20T11:18:32.883Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":9,"status":200,"url":"/lead-status?filter=this_month"},"timestamp":"2024-11-20T11:18:32.884Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":6,"status":404,"url":"/lead-timeline?filter=this_month"},"timestamp":"2024-11-20T11:18:32.894Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":6,"status":404,"url":"/lead-timeline?filter=this_month"},"timestamp":"2024-11-20T11:18:32.894Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":55,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:19:31.147Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":56,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:19:31.147Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":61,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:31.149Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":62,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:31.150Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":10,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:31.167Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":11,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:31.168Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list?size=100&skip=0&search=test"},"timestamp":"2024-11-20T11:19:38.887Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":8,"status":200,"url":"/list?size=100&skip=0&search=test"},"timestamp":"2024-11-20T11:19:38.888Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":2,"status":200,"url":"/list?size=100&skip=0&search=t"},"timestamp":"2024-11-20T11:19:40.670Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":3,"status":200,"url":"/list?size=100&skip=0&search=t"},"timestamp":"2024-11-20T11:19:40.671Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:44.898Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":8,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:44.899Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"}],"total":1},"message":"Admin users fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:19:44.922Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin users fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null}]}}","responseTime":6,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:19:44.923Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:50.423Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:50.423Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:51.003Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:51.003Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:51.576Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:51.576Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:55.147Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:55.148Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:57.682Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:19:57.682Z"}
{"level":"info","message":{"body":{"title":"nitesh"},"method":"POST","responseBody":{"data":{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null},"message":"Created successfully","success":true},"responseTime":7,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:20:00.310Z"}
{"level":"info","message":{"body":{"title":"nitesh"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null,\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null}}","responseTime":7,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:20:00.310Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:00.336Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:00.337Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:02.875Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:02.876Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:03.306Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:03.306Z"}
{"level":"info","message":{"body":{"area":[],"title":"nitesh"},"method":"POST","responseBody":{"message":"Area cannot be an empty array."},"responseTime":2,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:20:05.383Z"}
{"level":"info","message":{"body":{"area":[],"title":"nitesh"},"method":"POST","responseBody":"{\"message\":\"Area cannot be an empty array.\"}","responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:20:05.384Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":3,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:05.411Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:05.412Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:08.864Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:08.865Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"permissions":"","phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"},"message":"Admin user fetched successfully","success":true},"responseTime":7,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:20:09.320Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":7,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:20:09.320Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list?skip=0"},"timestamp":"2024-11-20T11:20:13.894Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":7,"status":200,"url":"/list?skip=0"},"timestamp":"2024-11-20T11:20:13.894Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:16.642Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":5,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:16.642Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:17.061Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:17.062Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"}],"total":1},"message":"Admin users fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:20:17.075Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin users fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:20:17.076Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":3,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:20.310Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":4,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:20.311Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:20:29.550Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":9,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:20:29.551Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":15,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:30.855Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":15,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:30.855Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":13,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:30.857Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":14,"status":200,"url":"/"},"timestamp":"2024-11-20T11:20:30.858Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":14,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:20:30.885Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":15,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:20:30.885Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":9,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:39.054Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":10,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:39.055Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:43.421Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":9,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:43.422Z"}
{"level":"info","message":{"body":{"area":[],"title":"tres"},"method":"POST","responseBody":{"message":"Area cannot be an empty array."},"responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:20:47.562Z"}
{"level":"info","message":{"body":{"area":[],"title":"tres"},"method":"POST","responseBody":"{\"message\":\"Area cannot be an empty array.\"}","responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-20T11:20:47.562Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:47.596Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:47.597Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:56.165Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:20:56.165Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":36,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:09.267Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":37,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:09.268Z"}
{"level":"info","message":{"body":{"title":"ree"},"method":"POST","responseBody":{"data":{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},"message":"Created successfully","success":true},"responseTime":6,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:21:12.171Z"}
{"level":"info","message":{"body":{"title":"ree"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null,\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null}}","responseTime":7,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:21:12.172Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:12.199Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:12.200Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:14.849Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":8,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:14.850Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:15.329Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:15.329Z"}
{"level":"info","message":{"body":{"area":[1,2],"title":"test"},"method":"POST","responseBody":{"data":{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null},"message":"Created successfully","success":true},"responseTime":41,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:21:26.765Z"}
{"level":"info","message":{"body":{"area":[1,2],"title":"test"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"deletedAt\":null,\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"regionId\":null}}","responseTime":42,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:21:26.766Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:26.797Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:26.797Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:33.996Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:21:33.997Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"permissions":"","phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"},"message":"Admin user fetched successfully","success":true},"responseTime":58,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:23:43.124Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":58,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:23:43.124Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"permissions":"","phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"},"message":"Admin user fetched successfully","success":true},"responseTime":9,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:23:43.137Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":11,"status":200,"url":"/get/hdcbIPsIL8MJOa0AhWh52pSOFwu1"},"timestamp":"2024-11-20T11:23:43.139Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":67,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:41:06.788Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":68,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:41:06.789Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":67,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:41:06.790Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":68,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:41:06.791Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":67,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:41:06.792Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":67,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:41:06.792Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":67,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:41:06.794Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":68,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:41:06.795Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":77,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:41:06.796Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":78,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:41:06.797Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":82,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:41:06.798Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":83,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:41:06.799Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":20,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:41:06.821Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":21,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:41:06.822Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":12,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:41:06.824Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":12,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:41:06.824Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":10,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:41:06.825Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":11,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:41:06.826Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":20,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:41:06.827Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":20,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:41:06.827Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":19,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:41:06.829Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":19,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:41:06.829Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":27,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:41:06.831Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":27,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:41:06.831Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":21,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:41:06.853Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":21,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:41:06.854Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":16,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:41:06.854Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":17,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:41:06.855Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":14,"status":200,"url":"/"},"timestamp":"2024-11-20T11:41:06.855Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":15,"status":200,"url":"/"},"timestamp":"2024-11-20T11:41:06.856Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":10,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:41:06.857Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":11,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:41:06.858Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":18,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:41:06.861Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":19,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:41:06.862Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/lead-status?filter=this_month"},"timestamp":"2024-11-20T11:41:06.894Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":8,"status":200,"url":"/lead-status?filter=this_month"},"timestamp":"2024-11-20T11:41:06.894Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":4,"status":404,"url":"/lead-timeline?filter=this_month"},"timestamp":"2024-11-20T11:41:06.904Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":5,"status":404,"url":"/lead-timeline?filter=this_month"},"timestamp":"2024-11-20T11:41:06.905Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":39,"status":200,"url":"/"},"timestamp":"2024-11-20T11:41:29.417Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":40,"status":200,"url":"/"},"timestamp":"2024-11-20T11:41:29.417Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:41:29.936Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:41:29.937Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"}],"total":1},"message":"Admin users fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:41:29.951Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin users fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null}]}}","responseTime":6,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:41:29.952Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":139,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:46:11.475Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":140,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:46:11.476Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:46:12.028Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:46:12.029Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/get/6249d513-67af-4974-bd12-06fe5a7d5d90"},"timestamp":"2024-11-20T11:46:12.866Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}}","responseTime":5,"status":200,"url":"/get/6249d513-67af-4974-bd12-06fe5a7d5d90"},"timestamp":"2024-11-20T11:46:12.867Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:46:12.883Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:46:12.884Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":135,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:05.008Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":136,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:05.009Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:06.796Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:06.796Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:08.915Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:08.916Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:17.622Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:49:17.623Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":254,"status":200,"url":"/"},"timestamp":"2024-11-20T11:50:53.937Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":257,"status":200,"url":"/"},"timestamp":"2024-11-20T11:50:53.940Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":10,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:50:54.322Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":11,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:50:54.323Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"}],"total":1},"message":"Admin users fetched successfully","success":true},"responseTime":9,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:50:54.341Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin users fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null}]}}","responseTime":10,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:50:54.342Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Cannot destructure property 'questionList' of 'campaign' as it is null."},"responseTime":165,"status":500,"url":"/get/25"},"timestamp":"2024-11-20T11:55:57.753Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Cannot destructure property 'questionList' of 'campaign' as it is null.\"}","responseTime":166,"status":500,"url":"/get/25"},"timestamp":"2024-11-20T11:55:57.754Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"Unauthorized Access","success":false},"responseTime":51,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T11:56:30.573Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"Unauthorized Access\",\"data\":null}","responseTime":53,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T11:56:30.575Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"Unauthorized Access","success":false},"responseTime":3,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T11:56:30.581Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"Unauthorized Access\",\"data\":null}","responseTime":5,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T11:56:30.582Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"Unauthorized Access","success":false},"responseTime":80,"status":401,"url":"/list"},"timestamp":"2024-11-20T11:56:59.082Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"Unauthorized Access\",\"data\":null}","responseTime":82,"status":401,"url":"/list"},"timestamp":"2024-11-20T11:56:59.084Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"Unauthorized Access","success":false},"responseTime":4,"status":401,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:56:59.115Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"Unauthorized Access\",\"data\":null}","responseTime":5,"status":401,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:56:59.116Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"Unauthorized Access","success":false},"responseTime":3,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T11:56:59.576Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"Unauthorized Access\",\"data\":null}","responseTime":4,"status":401,"url":"/get/cMOYUUZXrOO7lXrMk0aG3B9t9L32"},"timestamp":"2024-11-20T11:56:59.577Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":2,"status":200,"url":"/"},"timestamp":"2024-11-20T11:56:59.711Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"UserAddress\"\n      },\n      {\n        \"name\": \"Cart\"\n      },\n      {\n        \"name\": \"Admin > Vendors\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Areas\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/user-address\": {\n        \"post\": {\n          \"summary\": \"Create a new user address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"phone\",\n                    \"address\",\n                    \"houseNo\",\n                    \"city\",\n                    \"state\",\n                    \"country\",\n                    \"zipCode\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"gstin\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"User address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/list\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user-address/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"houseNo\": {\n                      \"type\": \"string\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a user address by ID\",\n          \"tags\": [\n            \"UserAddress\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"User address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Area\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Area created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of Areas to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"number\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of Areas retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Area by ID\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Area to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Area\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Area updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Area not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/area/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Areas\",\n          \"tags\": [\n            \"Areas\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Areas deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more Areas not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"title\",\n                    \"area\"\n                  ],\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        100,\n                        200\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list\": {\n        \"get\": {\n          \"summary\": \"Get all region with filtering and pagination\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching regions based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"id\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by id.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"title\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by title.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"area\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by area.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"createdBy\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter regions by createdBy.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only regions marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region details retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": {\n                      \"type\": \"string\",\n                      \"example\": \"Updated Region\"\n                    },\n                    \"area\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        150,\n                        250\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1,\n                        2\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"One or more regions not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/empty\": {\n        \"delete\": {\n          \"summary\": \"Empty a Cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart emptied successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart\": {\n        \"get\": {\n          \"summary\": \"Get a Cart for the authenticated user\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Cart retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/add\": {\n        \"post\": {\n          \"summary\": \"Add a product to the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product added to the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/delete\": {\n        \"delete\": {\n          \"summary\": \"delete a product from the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted from the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product or cart not found\"\n            }\n          }\n        }\n      },\n      \"/api/cart/product/remove\": {\n        \"put\": {\n          \"summary\": \"remove a product in the cart\",\n          \"tags\": [\n            \"Cart\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"product_id\",\n                    \"productType\",\n                    \"quantity\"\n                  ],\n                  \"properties\": {\n                    \"product_id\": {\n                      \"type\": \"number\"\n                    },\n                    \"productType\": {\n                      \"type\": \"string\"\n                    },\n                    \"quantity\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated in the cart\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"company_name\",\n                    \"gst_number\",\n                    \"company_address\",\n                    \"company_email\",\n                    \"company_phone\",\n                    \"first_name\",\n                    \"last_name\",\n                    \"email\",\n                    \"phone\"\n                  ],\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/list\": {\n        \"get\": {\n          \"summary\": \"Get all Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Vendor by ID\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Vendor\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Vendor to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"company_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"gst_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_address\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_email\": {\n                      \"type\": \"string\"\n                    },\n                    \"company_phone\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendor updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/vendors/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Vendors\",\n          \"tags\": [\n            \"Admin > Vendors\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": \"Array of Vendor IDs to delete\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Vendors deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Vendor not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"organizationId\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"organizationId\": 1,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"regionId\",\n                    \"questionList\",\n                    \"start\",\n                    \"to\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test 2\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"c83e8df1-d958-489a-9f6f-17fb09d6927d\"\n                      },\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaign ads with filtering and pagination\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to retrieve per page (limit).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Number of records to skip (offset).\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Search keyword for matching campaigns based on name, franchise ID, region, description, or other relevant fields.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"id ASC\",\n                  \"id DESC\",\n                  \"name ASC\",\n                  \"name DESC\",\n                  \"createdAt ASC\",\n                  \"createdAt DESC\"\n                ]\n              },\n              \"description\": \"Sorting order for the results, e.g., 'id ASC' or 'createdAt DESC'.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseId\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by franchise ID.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"region\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Filter campaigns by region.\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"trashOnly\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Flag to return only campaigns marked for deletion (trash).\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test Updated\",\n                      \"description\": \"Name of the campaign\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Test\",\n                      \"description\": \"Description of the campaign\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of question IDs associated with the campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"cb5511e3-82b8-4a7d-9dec-8769a747dc64\",\n                      \"description\": \"Franchise ID associated with the campaign\"\n                    },\n                    \"regionId\": {\n                      \"type\": \"integer\",\n                      \"example\": 1,\n                      \"description\": \"Region ID associated with the campaign\"\n                    },\n                    \"affiliateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"a61f854a-1234-4a67-a428-d77473be7c59\",\n                      \"description\": \"Affiliate ID associated with the campaign\"\n                    },\n                    \"proposalIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"c83e8df1-d958-489a-9f6f-17fb09d6927d\",\n                        \"82928a12-f2f9-4212-9189-5ae20242c438\"\n                      ],\n                      \"description\": \"List of proposal IDs associated with the campaign\"\n                    },\n                    \"start\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-19\",\n                      \"description\": \"Start date of the campaign\"\n                    },\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-11-20\",\n                      \"description\": \"End date of the campaign\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"min_qty_order\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"vendorId\": {\n                      \"type\": \"string\",\n                      \"example\": \"11112333546\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"categories\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"min_qty_order\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"min_qty_order\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/create\": {\n        \"post\": {\n          \"summary\": \"Create a new shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"orderId\",\n                    \"shippingData\"\n                  ],\n                  \"properties\": {\n                    \"orderId\": {\n                      \"type\": \"string\",\n                      \"default\": \"order123\"\n                    },\n                    \"shippingData\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"default\": \"2024-11-12\"\n                        },\n                        \"activities\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"status\": {\n                                \"type\": \"string\",\n                                \"default\": \"shipped\"\n                              },\n                              \"trackingNumber\": {\n                                \"type\": \"string\",\n                                \"default\": \"TRACK123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Shipping history created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all shipping history records\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a shipping history record by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/shipping-history/delete/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete a shipping history record\",\n          \"tags\": [\n            \"Admin > Ecommerce > Shipping History\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the shipping history record to delete\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Shipping history deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Shipping history not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list-all\": {\n        \"get\": {\n          \"summary\": \"Get all categories with products\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"categories\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"categories\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"categories\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"number\"\n                      },\n                      \"example\": [\n                        1111223344,\n                        223344556\n                      ]\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModalId\": {\n                      \"type\": \"string\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/search-lead?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/order-payment/callback\": {\n        \"post\": {\n          \"summary\": \"Handle Razorpay payment webhook callback.\",\n          \"description\": \"Receives and verifies webhook payloads from Razorpay.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook processed successfully.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/fetch/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details from Razorpay and local repository.\",\n          \"description\": \"Retrieves payment details by payment ID from Razorpay and the local database.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"description\": \"The ID of the payment to fetch.\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details fetched successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"paymentDetailsFromRazorpay\": {\n                        \"type\": \"object\"\n                      },\n                      \"paymentDetailsFromRepo\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request, missing payment ID.\"\n            },\n            \"404\": {\n              \"description\": \"Payment not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link for the user's cart.\",\n          \"description\": \"Creates a payment link based on the user's cart and franchise data.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/order-payment/create-payment-intent\": {\n        \"post\": {\n          \"summary\": \"Create a Razorpay payment intent.\",\n          \"description\": \"Generates a payment intent (order) for the user's cart and creates a corresponding order in the system.\",\n          \"tags\": [\n            \"Order Payment\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment intent created successfully.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Cart or franchise data not found.\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error.\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"proposalData\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"proposalData\": {\n                      \"type\": \"object\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":0,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-20T11:56:59.802Z"}
{"level":"info","message":{"body":{"email":"admin5@gmail.com","firstName":"Test","lastName":"admin","password":"123456","phoneNumber":"string","role":0,"status":"active","userName":"testadmin"},"method":"POST","responseBody":{"data":null,"message":"Admin user created successfully","success":true},"responseTime":1469,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:57:33.551Z"}
{"level":"info","message":{"body":{"email":"admin5@gmail.com","firstName":"Test","lastName":"admin","password":"123456","phoneNumber":"string","role":0,"status":"active","userName":"testadmin"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Admin user created successfully\",\"data\":null}","responseTime":1470,"status":200,"url":"/create"},"timestamp":"2024-11-20T11:57:33.552Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:57:33.533Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin5@gmail.com","firebaseUid":"Gb4KwmX5VZVeDxUo2ylChganVn12","firstName":"Test","id":"d6317689-2b11-4965-93c3-71e217c9f312","lastLoginAt":"2024-11-20T11:57:33.533Z","lastName":"admin","nameForSearch":null,"password":"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC","password_token":null,"permissions":"","phoneNumber":"string","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:57:33.534Z","updatedBy":null,"userName":"testadmin"},"message":"Admin user fetched successfully","success":true},"responseTime":68,"status":200,"url":"/get/Gb4KwmX5VZVeDxUo2ylChganVn12"},"timestamp":"2024-11-20T11:57:53.995Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"firebaseUid\":\"Gb4KwmX5VZVeDxUo2ylChganVn12\",\"createdBy\":\"\",\"password\":\"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC\",\"profilePhoto\":null,\"firstName\":\"Test\",\"lastName\":\"admin\",\"nameForSearch\":null,\"email\":\"admin5@gmail.com\",\"userName\":\"testadmin\",\"phoneNumber\":\"string\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:57:33.533Z\",\"lastLoginAt\":\"2024-11-20T11:57:33.533Z\",\"updatedAt\":\"2024-11-20T11:57:33.534Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":69,"status":200,"url":"/get/Gb4KwmX5VZVeDxUo2ylChganVn12"},"timestamp":"2024-11-20T11:57:53.996Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:57:33.533Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin5@gmail.com","firebaseUid":"Gb4KwmX5VZVeDxUo2ylChganVn12","firstName":"Test","id":"d6317689-2b11-4965-93c3-71e217c9f312","lastLoginAt":"2024-11-20T11:57:33.533Z","lastName":"admin","nameForSearch":null,"password":"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC","password_token":null,"permissions":"","phoneNumber":"string","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:57:33.534Z","updatedBy":null,"userName":"testadmin"},"message":"Admin user fetched successfully","success":true},"responseTime":8,"status":200,"url":"/get/Gb4KwmX5VZVeDxUo2ylChganVn12"},"timestamp":"2024-11-20T11:57:54.010Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"firebaseUid\":\"Gb4KwmX5VZVeDxUo2ylChganVn12\",\"createdBy\":\"\",\"password\":\"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC\",\"profilePhoto\":null,\"firstName\":\"Test\",\"lastName\":\"admin\",\"nameForSearch\":null,\"email\":\"admin5@gmail.com\",\"userName\":\"testadmin\",\"phoneNumber\":\"string\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:57:33.533Z\",\"lastLoginAt\":\"2024-11-20T11:57:33.533Z\",\"updatedAt\":\"2024-11-20T11:57:33.534Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":9,"status":200,"url":"/get/Gb4KwmX5VZVeDxUo2ylChganVn12"},"timestamp":"2024-11-20T11:57:54.011Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":14,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:57:55.609Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":15,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:57:55.609Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":14,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:57:55.611Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":15,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:57:55.611Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":30,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:57:55.649Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":30,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:57:55.649Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:57:55.651Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:57:55.651Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:57:55.654Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:57:55.654Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":28,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:57:55.656Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:57:55.657Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":31,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:57:55.662Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":32,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=new"},"timestamp":"2024-11-20T11:57:55.663Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":30,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:57:55.665Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":31,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=contacted"},"timestamp":"2024-11-20T11:57:55.666Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":28,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:57:55.696Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:57:55.697Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":26,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:57:55.699Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":26,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:57:55.699Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":25,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:57:55.701Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":25,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=qualified"},"timestamp":"2024-11-20T11:57:55.701Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:57:55.708Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":29,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=proposal-sent"},"timestamp":"2024-11-20T11:57:55.708Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":38,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:57:55.718Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":39,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=negotiation"},"timestamp":"2024-11-20T11:57:55.719Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":37,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:57:55.720Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":38,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=converted"},"timestamp":"2024-11-20T11:57:55.721Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":16,"status":200,"url":"/"},"timestamp":"2024-11-20T11:57:55.727Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":16,"status":200,"url":"/"},"timestamp":"2024-11-20T11:57:55.727Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":14,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:57:55.728Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":15,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=lost"},"timestamp":"2024-11-20T11:57:55.729Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":9,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:57:55.739Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":9,"status":404,"url":"/lead-status-by-status-type?filter=this_month&statusType=followed-up"},"timestamp":"2024-11-20T11:57:55.739Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":10,"status":200,"url":"/lead-status?filter=this_month"},"timestamp":"2024-11-20T11:57:55.843Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":11,"status":200,"url":"/lead-status?filter=this_month"},"timestamp":"2024-11-20T11:57:55.844Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Franchise data not found."},"responseTime":6,"status":404,"url":"/lead-timeline?filter=this_month"},"timestamp":"2024-11-20T11:57:55.856Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Franchise data not found.\"}","responseTime":7,"status":404,"url":"/lead-timeline?filter=this_month"},"timestamp":"2024-11-20T11:57:55.857Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:57:33.533Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin5@gmail.com","firebaseUid":"Gb4KwmX5VZVeDxUo2ylChganVn12","firstName":"Test","id":"d6317689-2b11-4965-93c3-71e217c9f312","lastLoginAt":"2024-11-20T11:57:33.533Z","lastName":"admin","nameForSearch":null,"password":"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC","password_token":null,"phoneNumber":"string","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:57:33.534Z","updatedBy":null,"userName":"testadmin"},{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"}],"total":2},"message":"Admin users fetched successfully","success":true},"responseTime":12,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:57:58.073Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin users fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"firebaseUid\":\"Gb4KwmX5VZVeDxUo2ylChganVn12\",\"createdBy\":\"\",\"password\":\"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC\",\"profilePhoto\":null,\"firstName\":\"Test\",\"lastName\":\"admin\",\"nameForSearch\":null,\"email\":\"admin5@gmail.com\",\"userName\":\"testadmin\",\"phoneNumber\":\"string\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:57:33.533Z\",\"lastLoginAt\":\"2024-11-20T11:57:33.533Z\",\"updatedAt\":\"2024-11-20T11:57:33.534Z\",\"deletedAt\":null},{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null}]}}","responseTime":14,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:57:58.075Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":43,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:58:10.478Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":43,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:58:10.478Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":47,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:58:10.479Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":48,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:58:10.480Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":9,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:58:10.497Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":10,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:58:10.498Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":10,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:58:13.058Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":10,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:58:13.058Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/"},"timestamp":"2024-11-20T11:58:14.644Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":6,"status":200,"url":"/"},"timestamp":"2024-11-20T11:58:14.645Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":9,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:58:15.574Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":10,"status":200,"url":"/list"},"timestamp":"2024-11-20T11:58:15.575Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:57:33.533Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin5@gmail.com","firebaseUid":"Gb4KwmX5VZVeDxUo2ylChganVn12","firstName":"Test","id":"d6317689-2b11-4965-93c3-71e217c9f312","lastLoginAt":"2024-11-20T11:57:33.533Z","lastName":"admin","nameForSearch":null,"password":"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC","password_token":null,"phoneNumber":"string","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:57:33.534Z","updatedBy":null,"userName":"testadmin"},{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"}],"total":2},"message":"Admin users fetched successfully","success":true},"responseTime":11,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:58:15.604Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin users fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"firebaseUid\":\"Gb4KwmX5VZVeDxUo2ylChganVn12\",\"createdBy\":\"\",\"password\":\"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC\",\"profilePhoto\":null,\"firstName\":\"Test\",\"lastName\":\"admin\",\"nameForSearch\":null,\"email\":\"admin5@gmail.com\",\"userName\":\"testadmin\",\"phoneNumber\":\"string\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:57:33.533Z\",\"lastLoginAt\":\"2024-11-20T11:57:33.533Z\",\"updatedAt\":\"2024-11-20T11:57:33.534Z\",\"deletedAt\":null},{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null}]}}","responseTime":12,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T11:58:15.605Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"07669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"Contact number must be a valid format.\"}","responseTime":4,"status":400,"url":"/"},"timestamp":"2024-11-20T11:58:24.833Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"Organization id is required.\"}","responseTime":5,"status":400,"url":"/"},"timestamp":"2024-11-20T11:58:31.417Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"\\\"regionId\\\" is not allowed\"}","responseTime":250,"status":400,"url":"/"},"timestamp":"2024-11-20T11:59:53.360Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"\\\"regionId\\\" is not allowed\"}","responseTime":5,"status":400,"url":"/"},"timestamp":"2024-11-20T11:59:54.514Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"\\\"regionId\\\" is not allowed\"}","responseTime":3,"status":400,"url":"/"},"timestamp":"2024-11-20T11:59:55.344Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"\\\"regionId\\\" is not allowed\"}","responseTime":4,"status":400,"url":"/"},"timestamp":"2024-11-20T11:59:55.961Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"\\\"regionId\\\" is not allowed\"}","responseTime":4,"status":400,"url":"/"},"timestamp":"2024-11-20T11:59:56.417Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"\\\"regionId\\\" is not allowed\"}","responseTime":2,"status":400,"url":"/"},"timestamp":"2024-11-20T12:00:04.090Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","location":"ge","state":"ger","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"message\":\"Organization id is required.\"}","responseTime":251,"status":400,"url":"/"},"timestamp":"2024-11-20T12:00:37.310Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":{"data":{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"message":"Created successfully","success":true},"responseTime":272,"status":201,"url":"/"},"timestamp":"2024-11-20T12:00:47.261Z"}
{"level":"info","message":{"body":{"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","isActive":true,"name":"Nitesh Kumar","ownerName":"regerger ger","ratings":0,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"franchiseType\":\"super_franchise\",\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"updatedAt\":\"2024-11-20T12:00:47.237Z\",\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"referBy\":null,\"parentFranchise\":null,\"activeContract\":null,\"organizationId\":null}}","responseTime":276,"status":201,"url":"/"},"timestamp":"2024-11-20T12:00:47.265Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-20T12:00:47.302Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":10,"status":200,"url":"/"},"timestamp":"2024-11-20T12:00:47.304Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"contracts":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseLocation":{"city":"ger","contactPhone":"gert","country":"India","createdAt":"2024-11-20T12:00:47.247Z","franchiseeId":"1062277c-483c-45f7-814f-0df01c216bb5","id":"c0ce6ad4-4882-4d12-a635-8aed8baac806","location":"ge","state":"ger","updatedAt":"2024-11-20T12:00:47.247Z","zipCode":"r"},"franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"region":{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null},"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","socialMediaDetails":[],"updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"},"message":"Fetched successfully","success":true},"responseTime":17,"status":200,"url":"/1062277c-483c-45f7-814f-0df01c216bb5"},"timestamp":"2024-11-20T12:00:49.404Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\",\"region\":{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null},\"franchiseLocation\":{\"id\":\"c0ce6ad4-4882-4d12-a635-8aed8baac806\",\"franchiseeId\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"contactPhone\":\"gert\",\"location\":\"ge\",\"city\":\"ger\",\"state\":\"ger\",\"country\":\"India\",\"zipCode\":\"r\",\"createdAt\":\"2024-11-20T12:00:47.247Z\",\"updatedAt\":\"2024-11-20T12:00:47.247Z\"},\"socialMediaDetails\":[],\"contracts\":[]}}","responseTime":18,"status":200,"url":"/1062277c-483c-45f7-814f-0df01c216bb5"},"timestamp":"2024-11-20T12:00:49.405Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:00:49.431Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":9,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:00:49.432Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:57:33.533Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin5@gmail.com","firebaseUid":"Gb4KwmX5VZVeDxUo2ylChganVn12","firstName":"Test","id":"d6317689-2b11-4965-93c3-71e217c9f312","lastLoginAt":"2024-11-20T11:57:33.533Z","lastName":"admin","nameForSearch":null,"password":"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC","password_token":null,"phoneNumber":"string","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:57:33.534Z","updatedBy":null,"userName":"testadmin"},{"access_token":null,"cart":null,"createdAt":"2024-11-20T11:18:13.945Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin@gmail.com","firebaseUid":"hdcbIPsIL8MJOa0AhWh52pSOFwu1","firstName":"Nitesh","id":"47827508-d4cf-4b14-bb59-2751c03c78cf","lastLoginAt":"2024-11-20T11:18:13.945Z","lastName":"Kumar","nameForSearch":null,"password":"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za","password_token":null,"phoneNumber":"+919997016578","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:18:13.946Z","updatedBy":null,"userName":"Nkumar"}],"total":2},"message":"Admin users fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:00:49.449Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin users fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"firebaseUid\":\"Gb4KwmX5VZVeDxUo2ylChganVn12\",\"createdBy\":\"\",\"password\":\"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC\",\"profilePhoto\":null,\"firstName\":\"Test\",\"lastName\":\"admin\",\"nameForSearch\":null,\"email\":\"admin5@gmail.com\",\"userName\":\"testadmin\",\"phoneNumber\":\"string\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:57:33.533Z\",\"lastLoginAt\":\"2024-11-20T11:57:33.533Z\",\"updatedAt\":\"2024-11-20T11:57:33.534Z\",\"deletedAt\":null},{\"id\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"firebaseUid\":\"hdcbIPsIL8MJOa0AhWh52pSOFwu1\",\"createdBy\":\"\",\"password\":\"$2b$10$6.RoDxd9qXGsS8iliWTdcOP9MR2ivyBRW.Uvi5kqy2IAYp2/id6Za\",\"profilePhoto\":null,\"firstName\":\"Nitesh\",\"lastName\":\"Kumar\",\"nameForSearch\":null,\"email\":\"admin@gmail.com\",\"userName\":\"Nkumar\",\"phoneNumber\":\"+919997016578\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:18:13.945Z\",\"lastLoginAt\":\"2024-11-20T11:18:13.945Z\",\"updatedAt\":\"2024-11-20T11:18:13.946Z\",\"deletedAt\":null}]}}","responseTime":9,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:00:49.450Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":14,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:00:56.230Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":15,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:00:56.231Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-20T12:00:56.791Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":11,"status":200,"url":"/"},"timestamp":"2024-11-20T12:00:56.794Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":9,"status":200,"url":"/"},"timestamp":"2024-11-20T12:00:56.796Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":11,"status":200,"url":"/"},"timestamp":"2024-11-20T12:00:56.797Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:00:56.810Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":7,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:00:56.810Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:01.179Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":7,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:01.180Z"}
{"level":"info","message":{"body":{"options":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"}],"question":"how much time we need to begin?","required":true,"type":"boolean"},"method":"POST","responseBody":{"data":{"createdAt":"2024-11-20T12:01:06.977Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"b7a32c80-1704-4bc8-a66e-69afcb88e8cb","options":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"}],"question":"how much time we need to begin?","required":true,"type":"boolean","updatedAt":"2024-11-20T12:01:06.977Z","updatedBy":null},"message":"Created successfully","success":true},"responseTime":6,"status":200,"url":"/create"},"timestamp":"2024-11-20T12:01:06.980Z"}
{"level":"info","message":{"body":{"options":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"}],"question":"how much time we need to begin?","required":true,"type":"boolean"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"createdAt\":\"2024-11-20T12:01:06.977Z\",\"updatedAt\":\"2024-11-20T12:01:06.977Z\",\"id\":\"b7a32c80-1704-4bc8-a66e-69afcb88e8cb\",\"deletedAt\":null,\"question\":\"how much time we need to begin?\",\"type\":\"boolean\",\"required\":true,\"options\":[{\"label\":\"Yes\",\"value\":\"Yes\"},{\"label\":\"No\",\"value\":\"No\"}],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null}}","responseTime":7,"status":200,"url":"/create"},"timestamp":"2024-11-20T12:01:06.981Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T12:01:06.977Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"b7a32c80-1704-4bc8-a66e-69afcb88e8cb","options":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"}],"question":"how much time we need to begin?","required":true,"type":"boolean","updatedAt":"2024-11-20T12:01:06.977Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:07.009Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"b7a32c80-1704-4bc8-a66e-69afcb88e8cb\",\"question\":\"how much time we need to begin?\",\"type\":\"boolean\",\"required\":true,\"options\":[{\"label\":\"Yes\",\"value\":\"Yes\"},{\"label\":\"No\",\"value\":\"No\"}],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T12:01:06.977Z\",\"updatedAt\":\"2024-11-20T12:01:06.977Z\",\"deletedAt\":null}]}}","responseTime":6,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:07.010Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":145,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:17.936Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":145,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:17.937Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-20T12:01:18.229Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":9,"status":200,"url":"/"},"timestamp":"2024-11-20T12:01:18.230Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/"},"timestamp":"2024-11-20T12:01:18.233Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-20T12:01:18.234Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T12:01:06.977Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"b7a32c80-1704-4bc8-a66e-69afcb88e8cb","options":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"}],"question":"how much time we need to begin?","required":true,"type":"boolean","updatedAt":"2024-11-20T12:01:06.977Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:18.246Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"b7a32c80-1704-4bc8-a66e-69afcb88e8cb\",\"question\":\"how much time we need to begin?\",\"type\":\"boolean\",\"required\":true,\"options\":[{\"label\":\"Yes\",\"value\":\"Yes\"},{\"label\":\"No\",\"value\":\"No\"}],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T12:01:06.977Z\",\"updatedAt\":\"2024-11-20T12:01:06.977Z\",\"deletedAt\":null}]}}","responseTime":9,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:01:18.247Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/"},"timestamp":"2024-11-20T12:01:27.342Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":7,"status":200,"url":"/"},"timestamp":"2024-11-20T12:01:27.343Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:01:28.850Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:01:28.852Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:01:30.100Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:01:30.101Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list?skip=0"},"timestamp":"2024-11-20T12:01:39.600Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":5,"status":200,"url":"/list?skip=0"},"timestamp":"2024-11-20T12:01:39.600Z"}
{"level":"info","message":{"body":{"bestFor":["sd"],"description":"","images":[{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd"}],"inclusions":["wed"],"investment":324,"others":[],"reqArea":423,"runningCost":4334,"title":"EFEWFEW"},"method":"POST","responseBody":{"data":{"_original":{"bestFor":["sd"],"description":"","images":[{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd"}],"inclusions":["wed"],"investment":324,"others":[],"reqArea":423,"runningCost":4334,"title":"EFEWFEW"},"details":[{"context":{"key":"description","label":"description","value":""},"message":"\"description\" is not allowed to be empty","path":["description"],"type":"string.empty"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":1,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:01:57.796Z"}
{"level":"info","message":{"body":{"bestFor":["sd"],"description":"","images":[{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd"}],"inclusions":["wed"],"investment":324,"others":[],"reqArea":423,"runningCost":4334,"title":"EFEWFEW"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"description\":\"\",\"title\":\"EFEWFEW\",\"reqArea\":423,\"images\":[{\"url\":\"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd\",\"alt\":\"0\"}],\"investment\":324,\"runningCost\":4334,\"bestFor\":[\"sd\"],\"inclusions\":[\"wed\"],\"others\":[]},\"details\":[{\"message\":\"\\\"description\\\" is not allowed to be empty\",\"path\":[\"description\"],\"type\":\"string.empty\",\"context\":{\"label\":\"description\",\"value\":\"\",\"key\":\"description\"}}]}}","responseTime":2,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:01:57.797Z"}
{"level":"info","message":{"body":{"bestFor":["sd"],"description":"","images":[{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd"}],"inclusions":["wed"],"investment":324,"others":[],"reqArea":423,"runningCost":4334,"title":"EFEWFEW"},"method":"POST","responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:01:57.798Z"}
{"level":"info","message":{"body":{"bestFor":["sd"],"description":"erter","images":[{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd"},{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=51eb0ca1-6a43-4648-8eb1-c535928a5c4c"}],"inclusions":["wed"],"investment":324,"others":[],"reqArea":423,"runningCost":4334,"title":"EFEWFEW"},"method":"POST","responseBody":{"data":{"bestFor":["sd"],"createdAt":"2024-11-20T12:02:05.719Z","description":"erter","id":"3b940f62-e09b-4fc5-92e9-961e53b090a0","inclusions":["wed"],"investment":324,"reqArea":423,"runningCost":4334,"title":"EFEWFEW","updatedAt":"2024-11-20T12:02:05.719Z"},"message":"Created successfully","success":true},"responseTime":45,"status":200,"url":"/create"},"timestamp":"2024-11-20T12:02:05.763Z"}
{"level":"info","message":{"body":{"bestFor":["sd"],"description":"erter","images":[{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd"},{"alt":"0","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=51eb0ca1-6a43-4648-8eb1-c535928a5c4c"}],"inclusions":["wed"],"investment":324,"others":[],"reqArea":423,"runningCost":4334,"title":"EFEWFEW"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"id\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"description\":\"erter\",\"title\":\"EFEWFEW\",\"reqArea\":423,\"investment\":324,\"runningCost\":4334,\"bestFor\":[\"sd\"],\"inclusions\":[\"wed\"],\"updatedAt\":\"2024-11-20T12:02:05.719Z\",\"createdAt\":\"2024-11-20T12:02:05.719Z\"}}","responseTime":46,"status":200,"url":"/create"},"timestamp":"2024-11-20T12:02:05.763Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"bestFor":["sd"],"createdAt":"2024-11-20T12:02:05.719Z","description":"erter","id":"3b940f62-e09b-4fc5-92e9-961e53b090a0","inclusions":["wed"],"investment":324,"reqArea":423,"runningCost":4334,"title":"EFEWFEW","updatedAt":"2024-11-20T12:02:05.719Z"}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list?skip=0"},"timestamp":"2024-11-20T12:02:07.697Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"description\":\"erter\",\"title\":\"EFEWFEW\",\"reqArea\":423,\"investment\":324,\"runningCost\":4334,\"bestFor\":[\"sd\"],\"inclusions\":[\"wed\"],\"createdAt\":\"2024-11-20T12:02:05.719Z\",\"updatedAt\":\"2024-11-20T12:02:05.719Z\"}]}}","responseTime":7,"status":200,"url":"/list?skip=0"},"timestamp":"2024-11-20T12:02:07.699Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":38,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:20.555Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":38,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:20.555Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:21.051Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":6,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:21.052Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[],"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:21.640Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[]}","responseTime":7,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:21.640Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:22.049Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":9,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:22.050Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:22.527Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:22.527Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":3,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:25.563Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:25.564Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"bestFor":["sd"],"createdAt":"2024-11-20T12:02:05.719Z","description":"erter","id":"3b940f62-e09b-4fc5-92e9-961e53b090a0","inclusions":["wed"],"investment":324,"reqArea":423,"runningCost":4334,"title":"EFEWFEW","updatedAt":"2024-11-20T12:02:05.719Z"}],"total":1},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list?size=10&skip=0"},"timestamp":"2024-11-20T12:02:29.191Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"description\":\"erter\",\"title\":\"EFEWFEW\",\"reqArea\":423,\"investment\":324,\"runningCost\":4334,\"bestFor\":[\"sd\"],\"inclusions\":[\"wed\"],\"createdAt\":\"2024-11-20T12:02:05.719Z\",\"updatedAt\":\"2024-11-20T12:02:05.719Z\"}]}}","responseTime":5,"status":200,"url":"/list?size=10&skip=0"},"timestamp":"2024-11-20T12:02:29.191Z"}
{"level":"info","message":{"body":{"franchiseModel":"3b940f62-e09b-4fc5-92e9-961e53b090a0","prices":"1235,234234,23423,65454","title":"qwkegh"},"method":"POST","responseBody":{"data":{"createdAt":"2024-11-20T12:02:40.775Z","createdBy":"","deletedAt":null,"deletedBy":null,"franchiseModel":"3b940f62-e09b-4fc5-92e9-961e53b090a0","id":"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c","prices":"1235,234234,23423,65454","proposalIds":null,"title":"qwkegh","updatedAt":null,"updatedBy":null},"message":"Created successfully","success":true},"responseTime":33,"status":201,"url":"/create"},"timestamp":"2024-11-20T12:02:40.807Z"}
{"level":"info","message":{"body":{"franchiseModel":"3b940f62-e09b-4fc5-92e9-961e53b090a0","prices":"1235,234234,23423,65454","title":"qwkegh"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"id\":\"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c\",\"title\":\"qwkegh\",\"prices\":\"1235,234234,23423,65454\",\"franchiseModel\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"createdBy\":\"\",\"updatedBy\":null,\"createdAt\":\"2024-11-20T12:02:40.775Z\",\"updatedAt\":null,\"deletedAt\":null,\"deletedBy\":null,\"proposalIds\":null}}","responseTime":33,"status":201,"url":"/create"},"timestamp":"2024-11-20T12:02:40.807Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T12:02:40.775Z","createdBy":"","deletedAt":null,"deletedBy":null,"franchiseModel":"3b940f62-e09b-4fc5-92e9-961e53b090a0","id":"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c","prices":"1235,234234,23423,65454","proposalIds":null,"title":"qwkegh","updatedAt":null,"updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":4,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:42.786Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c\",\"title\":\"qwkegh\",\"prices\":\"1235,234234,23423,65454\",\"franchiseModel\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"createdAt\":\"2024-11-20T12:02:40.775Z\",\"createdBy\":\"\",\"updatedAt\":null,\"updatedBy\":null,\"deletedAt\":null,\"deletedBy\":null,\"proposalIds\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:42.787Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"bestFor":["sd"],"createdAt":"2024-11-20T12:02:05.719Z","description":"erter","id":"3b940f62-e09b-4fc5-92e9-961e53b090a0","images":[{"alt":"0","createdAt":"2024-11-20T12:02:05.758Z","franchiseModelId":"3b940f62-e09b-4fc5-92e9-961e53b090a0","id":"fbc6d979-c670-4956-80a0-3cb8fdfaa2e7","localFile":null,"updatedAt":"2024-11-20T12:02:05.758Z","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd"},{"alt":"0","createdAt":"2024-11-20T12:02:05.758Z","franchiseModelId":"3b940f62-e09b-4fc5-92e9-961e53b090a0","id":"6d1001a0-ea6f-481a-a8d7-7475cf03eb66","localFile":null,"updatedAt":"2024-11-20T12:02:05.758Z","url":"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=51eb0ca1-6a43-4648-8eb1-c535928a5c4c"}],"inclusions":["wed"],"investment":324,"others":[],"reqArea":423,"runningCost":4334,"title":"EFEWFEW","updatedAt":"2024-11-20T12:02:05.719Z"},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/get/3b940f62-e09b-4fc5-92e9-961e53b090a0"},"timestamp":"2024-11-20T12:02:42.806Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"id\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"description\":\"erter\",\"title\":\"EFEWFEW\",\"reqArea\":423,\"investment\":324,\"runningCost\":4334,\"bestFor\":[\"sd\"],\"inclusions\":[\"wed\"],\"createdAt\":\"2024-11-20T12:02:05.719Z\",\"updatedAt\":\"2024-11-20T12:02:05.719Z\",\"others\":[],\"images\":[{\"id\":\"fbc6d979-c670-4956-80a0-3cb8fdfaa2e7\",\"localFile\":null,\"url\":\"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=8f2df308-3304-4a39-bbd8-45c9134918dd\",\"alt\":\"0\",\"franchiseModelId\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"createdAt\":\"2024-11-20T12:02:05.758Z\",\"updatedAt\":\"2024-11-20T12:02:05.758Z\"},{\"id\":\"6d1001a0-ea6f-481a-a8d7-7475cf03eb66\",\"localFile\":null,\"url\":\"https://firebasestorage.googleapis.com/v0/b/tongue-tinglers.appspot.com/o/franchise-modelsThank-You-Image-PNG-Isolated-File.png?alt=media&token=51eb0ca1-6a43-4648-8eb1-c535928a5c4c\",\"alt\":\"0\",\"franchiseModelId\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"createdAt\":\"2024-11-20T12:02:05.758Z\",\"updatedAt\":\"2024-11-20T12:02:05.758Z\"}]}}","responseTime":8,"status":200,"url":"/get/3b940f62-e09b-4fc5-92e9-961e53b090a0"},"timestamp":"2024-11-20T12:02:42.807Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":9,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:50.086Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":11,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:50.088Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":16,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:50.090Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":17,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:50.091Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:50.108Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":8,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:02:50.109Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:55.425Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":8,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:55.425Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:55.895Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:55.895Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:55.899Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-20T12:02:55.900Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T12:01:06.977Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"b7a32c80-1704-4bc8-a66e-69afcb88e8cb","options":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"}],"question":"how much time we need to begin?","required":true,"type":"boolean","updatedAt":"2024-11-20T12:01:06.977Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:55.912Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"b7a32c80-1704-4bc8-a66e-69afcb88e8cb\",\"question\":\"how much time we need to begin?\",\"type\":\"boolean\",\"required\":true,\"options\":[{\"label\":\"Yes\",\"value\":\"Yes\"},{\"label\":\"No\",\"value\":\"No\"}],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T12:01:06.977Z\",\"updatedAt\":\"2024-11-20T12:01:06.977Z\",\"deletedAt\":null}]}}","responseTime":5,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:02:55.912Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":[{"activeContract":null,"contactEmail":"niteshrghv@gmail.com","contactNumber":"+917669082540","contractIds":[],"createdAt":"2024-11-20T12:00:47.237Z","establishedDate":"2024-11-20T11:58:15.549Z","franchiseAgreementSignedDate":"2024-11-20T11:58:15.549Z","franchiseRenewalInfo":null,"franchiseType":"super_franchise","id":"1062277c-483c-45f7-814f-0df01c216bb5","isActive":true,"name":"Nitesh Kumar","organizationId":null,"ownerName":"regerger ger","parentFranchise":null,"ratings":0,"referBy":null,"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","updatedAt":"2024-11-20T12:00:47.237Z","userid":"d6317689-2b11-4965-93c3-71e217c9f312"}],"message":"Fetched successfully","success":true},"responseTime":3,"status":200,"url":"/"},"timestamp":"2024-11-20T12:03:04.767Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":[{\"id\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"userid\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"referBy\":null,\"parentFranchise\":null,\"name\":\"Nitesh Kumar\",\"ownerName\":\"regerger ger\",\"contactEmail\":\"niteshrghv@gmail.com\",\"contactNumber\":\"+917669082540\",\"establishedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseAgreementSignedDate\":\"2024-11-20T11:58:15.549Z\",\"franchiseType\":\"super_franchise\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"contractIds\":[],\"activeContract\":null,\"isActive\":true,\"ratings\":0,\"franchiseRenewalInfo\":null,\"organizationId\":null,\"createdAt\":\"2024-11-20T12:00:47.237Z\",\"updatedAt\":\"2024-11-20T12:00:47.237Z\"}]}","responseTime":4,"status":200,"url":"/"},"timestamp":"2024-11-20T12:03:04.768Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:03:05.786Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:03:05.786Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T12:02:40.775Z","createdBy":"","deletedAt":null,"deletedBy":null,"franchiseModel":"3b940f62-e09b-4fc5-92e9-961e53b090a0","id":"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c","prices":"1235,234234,23423,65454","proposalIds":null,"title":"qwkegh","updatedAt":null,"updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":3,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:03:06.930Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c\",\"title\":\"qwkegh\",\"prices\":\"1235,234234,23423,65454\",\"franchiseModel\":\"3b940f62-e09b-4fc5-92e9-961e53b090a0\",\"createdAt\":\"2024-11-20T12:02:40.775Z\",\"createdBy\":\"\",\"updatedAt\":null,\"updatedBy\":null,\"deletedAt\":null,\"deletedBy\":null,\"proposalIds\":null}]}}","responseTime":3,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:03:06.930Z"}
{"level":"info","message":{"body":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"method":"POST","responseBody":{"data":{"_original":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"details":[{"context":{"key":"regionId","label":"regionId","value":"6249d513-67af-4974-bd12-06fe5a7d5d90"},"message":"\"regionId\" must be a number","path":["regionId"],"type":"number.base"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:03:08.287Z"}
{"level":"info","message":{"body":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"name\":\"Nitesh Kumar\",\"description\":\"234\",\"questionList\":[\"b7a32c80-1704-4bc8-a66e-69afcb88e8cb\"],\"franchiseId\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"start\":\"2024-11-20T12:02:55.873Z\",\"to\":\"2024-11-23\",\"proposalIds\":[\"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c\"],\"affiliateId\":\"a61f854a-1234-4a67-a428-d77473be7c59\"},\"details\":[{\"message\":\"\\\"regionId\\\" must be a number\",\"path\":[\"regionId\"],\"type\":\"number.base\",\"context\":{\"label\":\"regionId\",\"value\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"key\":\"regionId\"}}]}}","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:03:08.288Z"}
{"level":"info","message":{"body":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"method":"POST","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:03:08.288Z"}
{"level":"info","message":{"body":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"method":"POST","responseBody":{"data":{"_original":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"details":[{"context":{"key":"regionId","label":"regionId","value":"6249d513-67af-4974-bd12-06fe5a7d5d90"},"message":"\"regionId\" must be a number","path":["regionId"],"type":"number.base"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:03:18.788Z"}
{"level":"info","message":{"body":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"name\":\"Nitesh Kumar\",\"description\":\"234\",\"questionList\":[\"b7a32c80-1704-4bc8-a66e-69afcb88e8cb\"],\"franchiseId\":\"1062277c-483c-45f7-814f-0df01c216bb5\",\"regionId\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"start\":\"2024-11-20T12:02:55.873Z\",\"to\":\"2024-11-23\",\"proposalIds\":[\"d72a3b4e-f3b9-4f42-97d5-e95b9024f43c\"],\"affiliateId\":\"a61f854a-1234-4a67-a428-d77473be7c59\"},\"details\":[{\"message\":\"\\\"regionId\\\" must be a number\",\"path\":[\"regionId\"],\"type\":\"number.base\",\"context\":{\"label\":\"regionId\",\"value\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"key\":\"regionId\"}}]}}","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:03:18.789Z"}
{"level":"info","message":{"body":{"affiliateId":"a61f854a-1234-4a67-a428-d77473be7c59","description":"234","franchiseId":"1062277c-483c-45f7-814f-0df01c216bb5","name":"Nitesh Kumar","proposalIds":["d72a3b4e-f3b9-4f42-97d5-e95b9024f43c"],"questionList":["b7a32c80-1704-4bc8-a66e-69afcb88e8cb"],"regionId":"6249d513-67af-4974-bd12-06fe5a7d5d90","start":"2024-11-20T12:02:55.873Z","to":"2024-11-23"},"method":"POST","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-20T12:03:18.790Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":298,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:06:45.057Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":301,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:06:45.060Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null}],"total":1},"message":"Fetched successfully","success":true},"responseTime":9,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:47.122Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":1,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":11,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:47.123Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:47.839Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":8,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:47.840Z"}
{"level":"info","message":{"body":{"area":[1,2],"title":"fdsd"},"method":"POST","responseBody":{"data":{"area":[1,2],"createdAt":"2024-11-20T12:06:51.254Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"17c891b9-04cf-416a-a865-69c9aa50e4e0","regionId":null,"title":"fdsd","updatedAt":"2024-11-20T12:06:51.254Z","updatedBy":null},"message":"Created successfully","success":true},"responseTime":23,"status":200,"url":"/create"},"timestamp":"2024-11-20T12:06:51.261Z"}
{"level":"info","message":{"body":{"area":[1,2],"title":"fdsd"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"createdAt\":\"2024-11-20T12:06:51.254Z\",\"updatedAt\":\"2024-11-20T12:06:51.254Z\",\"id\":\"17c891b9-04cf-416a-a865-69c9aa50e4e0\",\"deletedAt\":null,\"title\":\"fdsd\",\"area\":[1,2],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"regionId\":null}}","responseTime":24,"status":200,"url":"/create"},"timestamp":"2024-11-20T12:06:51.262Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null},{"area":[1,2],"createdAt":"2024-11-20T12:06:51.254Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"17c891b9-04cf-416a-a865-69c9aa50e4e0","regionId":null,"title":"fdsd","updatedAt":"2024-11-20T12:06:51.254Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:51.292Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null},{\"id\":\"17c891b9-04cf-416a-a865-69c9aa50e4e0\",\"title\":\"fdsd\",\"area\":[1,2],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T12:06:51.254Z\",\"updatedAt\":\"2024-11-20T12:06:51.254Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:51.293Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"createdAt":"2024-11-20T11:21:12.168Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":2,"title":"ree","updatedAt":"2024-11-20T11:21:12.168Z","updatedBy":null},{"createdAt":"2024-11-20T11:20:00.306Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":1,"title":"nitesh","updatedAt":"2024-11-20T11:20:00.306Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:57.000Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":2,\"title\":\"ree\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:12.168Z\",\"updatedAt\":\"2024-11-20T11:21:12.168Z\",\"deletedAt\":null},{\"id\":1,\"title\":\"nitesh\",\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:20:00.306Z\",\"updatedAt\":\"2024-11-20T11:20:00.306Z\",\"deletedAt\":null}]}}","responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:57.001Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null},{"area":[1,2],"createdAt":"2024-11-20T12:06:51.254Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"17c891b9-04cf-416a-a865-69c9aa50e4e0","regionId":null,"title":"fdsd","updatedAt":"2024-11-20T12:06:51.254Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":5,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:57.442Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null},{\"id\":\"17c891b9-04cf-416a-a865-69c9aa50e4e0\",\"title\":\"fdsd\",\"area\":[1,2],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T12:06:51.254Z\",\"updatedAt\":\"2024-11-20T12:06:51.254Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":6,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:06:57.443Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[],"total":0},"message":"Fetched successfully","success":true},"responseTime":61,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:26:58.123Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":0,\"data\":[]}}","responseTime":62,"status":200,"url":"/list?size=100&skip=0"},"timestamp":"2024-11-20T12:26:58.124Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null},{"area":[1,2],"createdAt":"2024-11-20T12:06:51.254Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"17c891b9-04cf-416a-a865-69c9aa50e4e0","regionId":null,"title":"fdsd","updatedAt":"2024-11-20T12:06:51.254Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":69,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:26:58.126Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null},{\"id\":\"17c891b9-04cf-416a-a865-69c9aa50e4e0\",\"title\":\"fdsd\",\"area\":[1,2],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T12:06:51.254Z\",\"updatedAt\":\"2024-11-20T12:06:51.254Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":70,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:26:58.127Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"data":[{"area":[1,2],"createdAt":"2024-11-20T11:21:26.761Z","createdBy":"47827508-d4cf-4b14-bb59-2751c03c78cf","deletedAt":null,"deletedBy":null,"id":"6249d513-67af-4974-bd12-06fe5a7d5d90","regionId":null,"title":"test","updatedAt":"2024-11-20T11:21:26.761Z","updatedBy":null},{"area":[1,2],"createdAt":"2024-11-20T12:06:51.254Z","createdBy":"d6317689-2b11-4965-93c3-71e217c9f312","deletedAt":null,"deletedBy":null,"id":"17c891b9-04cf-416a-a865-69c9aa50e4e0","regionId":null,"title":"fdsd","updatedAt":"2024-11-20T12:06:51.254Z","updatedBy":null}],"total":2},"message":"Fetched successfully","success":true},"responseTime":7,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:26:58.141Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"total\":2,\"data\":[{\"id\":\"6249d513-67af-4974-bd12-06fe5a7d5d90\",\"title\":\"test\",\"area\":[1,2],\"createdBy\":\"47827508-d4cf-4b14-bb59-2751c03c78cf\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T11:21:26.761Z\",\"updatedAt\":\"2024-11-20T11:21:26.761Z\",\"deletedAt\":null,\"regionId\":null},{\"id\":\"17c891b9-04cf-416a-a865-69c9aa50e4e0\",\"title\":\"fdsd\",\"area\":[1,2],\"createdBy\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"updatedBy\":null,\"deletedBy\":null,\"createdAt\":\"2024-11-20T12:06:51.254Z\",\"updatedAt\":\"2024-11-20T12:06:51.254Z\",\"deletedAt\":null,\"regionId\":null}]}}","responseTime":8,"status":200,"url":"/list"},"timestamp":"2024-11-20T12:26:58.142Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"access_token":null,"address":[],"cart":null,"createdAt":"2024-11-20T11:57:33.533Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"admin5@gmail.com","firebaseUid":"Gb4KwmX5VZVeDxUo2ylChganVn12","firstName":"Test","id":"d6317689-2b11-4965-93c3-71e217c9f312","lastLoginAt":"2024-11-20T11:57:33.533Z","lastName":"admin","nameForSearch":null,"password":"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC","password_token":null,"permissions":"","phoneNumber":"string","profilePhoto":null,"referBy":null,"referralCode":null,"refresh_token":null,"role":0,"status":"active","type":"master_franchise","updatedAt":"2024-11-20T11:57:33.534Z","updatedBy":null,"userName":"testadmin"},"message":"Admin user fetched successfully","success":true},"responseTime":12,"status":200,"url":"/get/Gb4KwmX5VZVeDxUo2ylChganVn12"},"timestamp":"2024-11-20T12:26:58.773Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Admin user fetched successfully\",\"data\":{\"id\":\"d6317689-2b11-4965-93c3-71e217c9f312\",\"firebaseUid\":\"Gb4KwmX5VZVeDxUo2ylChganVn12\",\"createdBy\":\"\",\"password\":\"$2b$10$TAXkqHZaF4A4nMK6owly8uiJNy8vQkWAosmO4VApRDwxZX1us34oC\",\"profilePhoto\":null,\"firstName\":\"Test\",\"lastName\":\"admin\",\"nameForSearch\":null,\"email\":\"admin5@gmail.com\",\"userName\":\"testadmin\",\"phoneNumber\":\"string\",\"type\":\"master_franchise\",\"status\":\"active\",\"cart\":null,\"access_token\":null,\"password_token\":null,\"referralCode\":null,\"referBy\":null,\"refresh_token\":null,\"updatedBy\":null,\"deletedBy\":null,\"role\":0,\"createdAt\":\"2024-11-20T11:57:33.533Z\",\"lastLoginAt\":\"2024-11-20T11:57:33.533Z\",\"updatedAt\":\"2024-11-20T11:57:33.534Z\",\"deletedAt\":null,\"address\":[],\"permissions\":\"\"}}","responseTime":12,"status":200,"url":"/get/Gb4KwmX5VZVeDxUo2ylChganVn12"},"timestamp":"2024-11-20T12:26:58.773Z"}

{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":12,"status":200,"url":"/"},"timestamp":"2024-11-05T11:56:02.594Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"code\",\n                    \"description\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": \"Country Name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Country Name\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Region to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"code\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"region\",\n                    \"questionList\",\n                    \"startDate\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Summer Campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"franchiseId\"\n                    },\n                    \"region\": {\n                      \"type\": \"string\",\n                      \"example\": \"punjab\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"A campaign for summer promotions\"\n                    },\n                    \"startDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-06-01T00:00:00Z\"\n                    },\n                    \"endDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-08-31T23:59:59Z\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                      },\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    },\n                    \"startDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"endDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":1,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-05T11:56:02.635Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"key":"phoneNumber","label":"phoneNumber","regex":{},"value":"string"},"message":"Phone number must be in international format (e.g., +1234567890).","path":["phoneNumber"],"type":"string.pattern.base"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":27,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:25.580Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"string\",\"email\":\"string\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[{\"followedDate\":\"2024-11-05T11:56:13.794Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T11:56:13.794Z\",\"createdAt\":\"2024-11-05T11:56:13.794Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Phone number must be in international format (e.g., +1234567890).\",\"path\":[\"phoneNumber\"],\"type\":\"string.pattern.base\",\"context\":{\"regex\":{},\"value\":\"string\",\"label\":\"phoneNumber\",\"key\":\"phoneNumber\"}}]}}","responseTime":29,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:25.582Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseTime":30,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:25.583Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"key":"status","label":"status","valids":["new","contacted","qualified","proposal-sent","negotiation","converted","lost","followed-up"],"value":"string"},"message":"Status must be one of: new, contacted, qualified, proposal-sent, negotiation, converted, lost, followed-up.","path":["status"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:42.645Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+9112365899\",\"email\":\"nn@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[{\"followedDate\":\"2024-11-05T11:56:13.794Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T11:56:13.794Z\",\"createdAt\":\"2024-11-05T11:56:13.794Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Status must be one of: new, contacted, qualified, proposal-sent, negotiation, converted, lost, followed-up.\",\"path\":[\"status\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"new\",\"contacted\",\"qualified\",\"proposal-sent\",\"negotiation\",\"converted\",\"lost\",\"followed-up\"],\"label\":\"status\",\"value\":\"string\",\"key\":\"status\"}}]}}","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:42.646Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:42.647Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"status","label":"followDetails[0].status","valids":["followed-up","not-followed-up"],"value":"string"},"message":"Status must be one of: followed-up, not-followed-up.","path":["followDetails",0,"status"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:52.030Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+9112365899\",\"email\":\"nn@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[{\"followedDate\":\"2024-11-05T11:56:13.794Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T11:56:13.794Z\",\"createdAt\":\"2024-11-05T11:56:13.794Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Status must be one of: followed-up, not-followed-up.\",\"path\":[\"followDetails\",0,\"status\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"followed-up\",\"not-followed-up\"],\"label\":\"followDetails[0].status\",\"value\":\"string\",\"key\":\"status\"}}]}}","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:52.031Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseTime":6,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:56:52.032Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"source","label":"source","valids":["admin","search","content","social-media","email-marketing","paid","event","referral"],"value":"string"},"message":"Source must be one of: admin, search, content, social-media, email-marketing, paid, event, referral.","path":["source"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":2,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:57:04.786Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+9112365899\",\"email\":\"nn@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[{\"followedDate\":\"2024-11-05T11:56:13.794Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"followed-up\",\"reminder\":\"2024-11-05T11:56:13.794Z\",\"createdAt\":\"2024-11-05T11:56:13.794Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Source must be one of: admin, search, content, social-media, email-marketing, paid, event, referral.\",\"path\":[\"source\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"admin\",\"search\",\"content\",\"social-media\",\"email-marketing\",\"paid\",\"event\",\"referral\"],\"label\":\"source\",\"value\":\"string\",\"key\":\"source\"}}]}}","responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:57:04.787Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:57:04.788Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"id","label":"affiliate[0].id"},"message":"Affiliate ID is required.","path":["affiliate",0,"id"],"type":"any.required"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":2,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:57:15.548Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+9112365899\",\"email\":\"nn@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[{\"followedDate\":\"2024-11-05T11:56:13.794Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"followed-up\",\"reminder\":\"2024-11-05T11:56:13.794Z\",\"createdAt\":\"2024-11-05T11:56:13.794Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"admin\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Affiliate ID is required.\",\"path\":[\"affiliate\",0,\"id\"],\"type\":\"any.required\",\"context\":{\"label\":\"affiliate[0].id\",\"key\":\"id\"}}]}}","responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:57:15.549Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"POST","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-05T11:57:15.550Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"POST","responseBody":{"message":"Internal server error"},"responseTime":137,"status":500,"url":"/create"},"timestamp":"2024-11-05T11:57:28.244Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"POST","responseBody":"{\"message\":\"Internal server error\"}","responseTime":138,"status":500,"url":"/create"},"timestamp":"2024-11-05T11:57:28.245Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"POST","responseBody":{"data":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"campaignId":"string","createdAt":"2024-11-05T11:58:13.416Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"id":"47aee66c-e1d9-47e0-9f46-e957c8cf2c1f","lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new","updatedAt":"2024-11-05T11:58:13.418Z","updatedBy":null},"message":"Created successfully","success":true},"responseTime":101,"status":200,"url":"/create"},"timestamp":"2024-11-05T11:58:13.448Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"assign":null,"campaignId":"string","email":"nn@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T11:56:13.794Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T11:56:13.794Z","notes":"string","reminder":"2024-11-05T11:56:13.794Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T11:56:13.794Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T11:56:13.794Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+9112365899","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"createdAt\":\"2024-11-05T11:58:13.416Z\",\"updatedAt\":\"2024-11-05T11:58:13.418Z\",\"id\":\"47aee66c-e1d9-47e0-9f46-e957c8cf2c1f\",\"deletedAt\":null,\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+9112365899\",\"email\":\"nn@gmail.com\",\"address\":{\"PAN\":\"string\",\"city\":\"string\",\"state\":\"string\",\"address\":\"string\",\"country\":\"string\",\"zipCode\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"id\":\"string\",\"userName\":\"string\"},\"followDetails\":[{\"notes\":\"string\",\"status\":\"followed-up\",\"reminder\":\"2024-11-05T11:56:13.794Z\",\"createdAt\":\"2024-11-05T11:56:13.794Z\",\"createdBy\":{\"id\":\"string\",\"userName\":\"string\"},\"followedBy\":{\"id\":\"string\",\"userName\":\"string\"},\"description\":\"string\",\"followedDate\":\"2024-11-05T11:56:13.794Z\"}],\"source\":\"admin\",\"sourceInfo\":\"string\",\"notes\":[{\"date\":\"2024-11-05T11:56:13.794Z\",\"note\":\"string\",\"userDetails\":{\"id\":\"string\",\"userName\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T11:56:13.794Z\",\"userDetails\":{\"id\":\"string\",\"userName\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[],\"marketing\":[\"string\"],\"other\":[],\"createdBy\":\"\",\"updatedBy\":null,\"deletedBy\":null}}","responseTime":109,"status":200,"url":"/create"},"timestamp":"2024-11-05T11:58:13.456Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"key":"phoneNumber","label":"phoneNumber","regex":{},"value":"string"},"message":"Phone number must be in international format (e.g., +1234567890).","path":["phoneNumber"],"type":"string.pattern.base"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":29,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:10:33.860Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"string\",\"email\":\"string\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T12:08:58.948Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T12:08:58.948Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T12:08:58.948Z\",\"createdAt\":\"2024-11-05T12:08:58.948Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Phone number must be in international format (e.g., +1234567890).\",\"path\":[\"phoneNumber\"],\"type\":\"string.pattern.base\",\"context\":{\"regex\":{},\"value\":\"string\",\"label\":\"phoneNumber\",\"key\":\"phoneNumber\"}}]}}","responseTime":35,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:10:33.867Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseTime":39,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:10:33.870Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+915623562","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+915623562","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"key":"phoneNumber","label":"phoneNumber","regex":{},"value":"+915623562"},"message":"Phone number must be in international format (e.g., +1234567890).","path":["phoneNumber"],"type":"string.pattern.base"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":3,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:10:56.262Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+915623562","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+915623562\",\"email\":\"oo@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T12:08:58.948Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T12:08:58.948Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T12:08:58.948Z\",\"createdAt\":\"2024-11-05T12:08:58.948Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Phone number must be in international format (e.g., +1234567890).\",\"path\":[\"phoneNumber\"],\"type\":\"string.pattern.base\",\"context\":{\"regex\":{},\"value\":\"+915623562\",\"label\":\"phoneNumber\",\"key\":\"phoneNumber\"}}]}}","responseTime":4,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:10:56.263Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+915623562","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseTime":5,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:10:56.264Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"key":"status","label":"status","valids":["new","contacted","qualified","proposal-sent","negotiation","converted","lost","followed-up"],"value":"string"},"message":"Status must be one of: new, contacted, qualified, proposal-sent, negotiation, converted, lost, followed-up.","path":["status"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":4,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:03.812Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+91562356452\",\"email\":\"oo@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T12:08:58.948Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T12:08:58.948Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T12:08:58.948Z\",\"createdAt\":\"2024-11-05T12:08:58.948Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Status must be one of: new, contacted, qualified, proposal-sent, negotiation, converted, lost, followed-up.\",\"path\":[\"status\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"new\",\"contacted\",\"qualified\",\"proposal-sent\",\"negotiation\",\"converted\",\"lost\",\"followed-up\"],\"label\":\"status\",\"value\":\"string\",\"key\":\"status\"}}]}}","responseTime":5,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:03.813Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"PUT","responseTime":6,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:03.814Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"status","label":"followDetails[0].status","valids":["followed-up","not-followed-up"],"value":"string"},"message":"Status must be one of: followed-up, not-followed-up.","path":["followDetails",0,"status"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":4,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:12.144Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+91562356452\",\"email\":\"oo@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T12:08:58.948Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T12:08:58.948Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T12:08:58.948Z\",\"createdAt\":\"2024-11-05T12:08:58.948Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Status must be one of: followed-up, not-followed-up.\",\"path\":[\"followDetails\",0,\"status\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"followed-up\",\"not-followed-up\"],\"label\":\"followDetails[0].status\",\"value\":\"string\",\"key\":\"status\"}}]}}","responseTime":5,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:12.145Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"PUT","responseTime":6,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:12.146Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"source","label":"source","valids":["admin","search","content","social-media","email-marketing","paid","event","referral"],"value":"string"},"message":"Source must be one of: admin, search, content, social-media, email-marketing, paid, event, referral.","path":["source"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":3,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:26.527Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+91562356452\",\"email\":\"oo@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T12:08:58.948Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T12:08:58.948Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"followed-up\",\"reminder\":\"2024-11-05T12:08:58.948Z\",\"createdAt\":\"2024-11-05T12:08:58.948Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Source must be one of: admin, search, content, social-media, email-marketing, paid, event, referral.\",\"path\":[\"source\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"admin\",\"search\",\"content\",\"social-media\",\"email-marketing\",\"paid\",\"event\",\"referral\"],\"label\":\"source\",\"value\":\"string\",\"key\":\"source\"}}]}}","responseTime":4,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:26.528Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"PUT","responseTime":5,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:26.529Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"id","label":"affiliate[0].id"},"message":"Affiliate ID is required.","path":["affiliate",0,"id"],"type":"any.required"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":3,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:39.733Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+91562356452\",\"email\":\"oo@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T12:08:58.948Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T12:08:58.948Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"followed-up\",\"reminder\":\"2024-11-05T12:08:58.948Z\",\"createdAt\":\"2024-11-05T12:08:58.948Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"admin\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Affiliate ID is required.\",\"path\":[\"affiliate\",0,\"id\"],\"type\":\"any.required\",\"context\":{\"label\":\"affiliate[0].id\",\"key\":\"id\"}}]}}","responseTime":3,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:39.733Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"}},"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"PUT","responseTime":4,"status":400,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:39.734Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":{"message":"Internal server error"},"responseTime":249,"status":500,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:49.732Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":"{\"message\":\"Internal server error\"}","responseTime":249,"status":500,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:11:49.732Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":{"data":[1],"message":"Updated successfully","success":true},"responseTime":90,"status":200,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:12:44.994Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new"},"method":"PUT","responseBody":"{\"success\":true,\"message\":\"Updated successfully\",\"data\":[1]}","responseTime":100,"status":200,"url":"/update/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:12:45.003Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Internal server error"},"responseTime":97,"status":500,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:23:00.227Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Internal server error\"}","responseTime":133,"status":500,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:23:00.263Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Internal server error"},"responseTime":104,"status":500,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:36:13.030Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Internal server error\"}","responseTime":125,"status":500,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:36:13.051Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"message":"Internal server error"},"responseTime":5,"status":500,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:36:15.652Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"message\":\"Internal server error\"}","responseTime":6,"status":500,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:36:15.653Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":null,"message":"does not exists","success":false},"responseTime":43,"status":400,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:38:50.181Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":false,\"message\":\"does not exists\",\"data\":null}","responseTime":48,"status":400,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:38:50.185Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":{"data":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"assign":[{"assignedBy":"e94fa6f1-3eab-49f0-bb40-4b3dcf0cb1e9","assignedDate":"2024-11-05T12:08:58.948Z","assignedTo":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","assignedUser":{"id":"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0","userName":"string"},"assignerUser":{"id":"e94fa6f1-3eab-49f0-bb40-4b3dcf0cb1e9","userName":"navdeepsariya121@gmail.com"}}],"campaignId":"string","createdAt":"2024-11-05T11:58:13.416Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"oo@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T12:08:58.948Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T12:08:58.948Z","notes":"string","reminder":"2024-11-05T12:08:58.948Z","status":"followed-up"}],"franchiseModals":["string"],"id":"47aee66c-e1d9-47e0-9f46-e957c8cf2c1f","lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T12:08:58.948Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T12:08:58.948Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+91562356452","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":"string","status":"new","updatedAt":"2024-11-05T12:12:44.970Z","updatedBy":""},"message":"Fetched successfully","success":true},"responseTime":32,"status":200,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:39:51.578Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"{\"success\":true,\"message\":\"Fetched successfully\",\"data\":{\"id\":\"47aee66c-e1d9-47e0-9f46-e957c8cf2c1f\",\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"email\":\"oo@gmail.com\",\"phoneNumber\":\"+91562356452\",\"address\":{\"PAN\":\"string\",\"city\":\"string\",\"state\":\"string\",\"address\":\"string\",\"country\":\"string\",\"zipCode\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"source\":\"admin\",\"sourceInfo\":\"string\",\"followDetails\":[{\"notes\":\"string\",\"status\":\"followed-up\",\"reminder\":\"2024-11-05T12:08:58.948Z\",\"createdAt\":\"2024-11-05T12:08:58.948Z\",\"createdBy\":{\"id\":\"string\",\"userName\":\"string\"},\"followedBy\":{\"id\":\"string\",\"userName\":\"string\"},\"description\":\"string\",\"followedDate\":\"2024-11-05T12:08:58.948Z\"}],\"referBy\":{\"id\":\"string\",\"userName\":\"string\"},\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T12:08:58.948Z\",\"userDetails\":{\"id\":\"string\",\"userName\":\"string\"}}],\"notes\":[{\"date\":\"2024-11-05T12:08:58.948Z\",\"note\":\"string\",\"userDetails\":{\"id\":\"string\",\"userName\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[],\"marketing\":[\"string\"],\"other\":[],\"createdBy\":\"\",\"updatedBy\":\"\",\"deletedBy\":null,\"createdAt\":\"2024-11-05T11:58:13.416Z\",\"updatedAt\":\"2024-11-05T12:12:44.970Z\",\"deletedAt\":null,\"assign\":[{\"assignedTo\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\",\"assignedBy\":\"e94fa6f1-3eab-49f0-bb40-4b3dcf0cb1e9\",\"assignedDate\":\"2024-11-05T12:08:58.948Z\",\"assignedUser\":{\"id\":\"fbe02d05-f6ec-43f7-9225-eaa0911fd1b0\",\"userName\":\"string\"},\"assignerUser\":{\"id\":\"e94fa6f1-3eab-49f0-bb40-4b3dcf0cb1e9\",\"userName\":\"navdeepsariya121@gmail.com\"}}]}}","responseTime":41,"status":200,"url":"/get/47aee66c-e1d9-47e0-9f46-e957c8cf2c1f"},"timestamp":"2024-11-05T12:39:51.586Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\n<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  \n  <title>Swagger UI</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" /><link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n      box-sizing: border-box;\n      overflow: -moz-scrollbars-vertical;\n      overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n      box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-ui-init.js\"> </script>\n\n\n\n<style>\n  .swagger-ui .topbar .download-url-wrapper { display: none } undefined\n</style>\n</body>\n\n</html>\n","responseTime":8,"status":200,"url":"/"},"timestamp":"2024-11-05T14:29:06.040Z"}
{"level":"info","message":{"body":{},"method":"GET","responseBody":"\nwindow.onload = function() {\n  // Build a system\n  var url = window.location.search.match(/url=([^&]+)/);\n  if (url && url.length > 1) {\n    url = decodeURIComponent(url[1]);\n  } else {\n    url = window.location.origin;\n  }\n  var options = {\n  \"swaggerDoc\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Tongue tinglers Api\",\n      \"description\": \"API endpoints\",\n      \"contact\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"url\": \"\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://localhost:3001/\",\n        \"description\": \"Local server\"\n      },\n      {\n        \"url\": \"https://api.tonguetingler.com/\",\n        \"description\": \"Live server\"\n      }\n    ],\n    \"components\": {\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      },\n      \"schemas\": {\n        \"SMDetails\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handle\": {\n              \"type\": \"string\",\n              \"description\": \"Social media handle\",\n              \"example\": \"@affiliate_handle\"\n            },\n            \"followers\": {\n              \"type\": \"integer\",\n              \"description\": \"Number of followers\",\n              \"example\": 1500\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Tags associated with the social media profile\",\n              \"example\": [\n                \"influencer\",\n                \"marketing\"\n              ]\n            }\n          }\n        },\n        \"AffiliateModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"codes\",\n            \"sm\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type of the Affiliate\",\n              \"example\": \"Influencer\"\n            },\n            \"codes\": {\n              \"type\": \"object\",\n              \"description\": \"Key-value pairs of affiliate codes\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"example\": {\n                \"DISCOUNT10\": \"Save 10%\",\n                \"FREESHIP\": \"Free Shipping\"\n              }\n            },\n            \"sm\": {\n              \"type\": \"object\",\n              \"description\": \"Social media details associated with the Affiliate\",\n              \"additionalProperties\": {\n                \"$ref\": \"#/components/schemas/SMDetails\"\n              },\n              \"example\": {\n                \"twitter\": {\n                  \"handle\": \"@affiliate_handle\",\n                  \"followers\": 1500,\n                  \"tags\": [\n                    \"influencer\",\n                    \"marketing\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"SeoImage\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"url\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URL of the image\"\n            },\n            \"alt\": {\n              \"type\": \"string\",\n              \"description\": \"Alternative text for the image\"\n            }\n          }\n        },\n        \"ExtraFields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"Key for the extra field\",\n              \"example\": \"FranchiseTerm\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Value of the extra field\",\n              \"example\": \"5 years\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for display\",\n              \"example\": \"Franchise Duration\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"string\",\n                \"number\",\n                \"date\"\n              ],\n              \"description\": \"Type of the extra field\",\n              \"example\": \"string\"\n            }\n          }\n        },\n        \"FranchiseModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"title\",\n            \"reqArea\",\n            \"images\",\n            \"investment\",\n            \"runningCost\",\n            \"bestFor\",\n            \"inclusions\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Detailed description of the franchise model\",\n              \"example\": \"A comprehensive franchise model for fast food chains.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the franchise model\",\n              \"example\": \"Fast Food Franchise Model\"\n            },\n            \"reqArea\": {\n              \"type\": \"integer\",\n              \"description\": \"Required area in square feet\",\n              \"example\": 1500\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            },\n            \"investment\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Initial investment required\",\n              \"example\": 50000\n            },\n            \"runningCost\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Monthly running cost\",\n              \"example\": 15000\n            },\n            \"bestFor\": {\n              \"type\": \"array\",\n              \"description\": \"Categories best suited for the franchise\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Urban Areas\",\n                \"High Foot Traffic Locations\"\n              ]\n            },\n            \"inclusions\": {\n              \"type\": \"array\",\n              \"description\": \"Items included in the franchise package\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"example\": [\n                \"Training\",\n                \"Marketing Materials\",\n                \"Initial Inventory\"\n              ]\n            },\n            \"others\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ExtraFields\"\n              }\n            }\n          }\n        },\n        \"ProposalModel\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"title\",\n            \"createdAt\",\n            \"createdBy\",\n            \"budget\",\n            \"files\"\n          ],\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of the Proposal model\",\n              \"example\": \"Fast Food Proposal Model\"\n            },\n            \"budget\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"Budget for the Proposal model\",\n              \"example\": 50000\n            },\n            \"files\": {\n              \"type\": \"array\",\n              \"description\": \"List of SEO-optimized images\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/SeoImage\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"tags\": [\n      {\n        \"name\": \"AUTH\"\n      },\n      {\n        \"name\": \"Regions\"\n      },\n      {\n        \"name\": \"Franchisee\"\n      },\n      {\n        \"name\": \"Admin > PDI Checklist\"\n      },\n      {\n        \"name\": \"QuickActions\"\n      },\n      {\n        \"name\": \"Files\"\n      },\n      {\n        \"name\": \"Gallery\"\n      },\n      {\n        \"name\": \"Questions\"\n      },\n      {\n        \"name\": \"Campaigns-Ad\"\n      },\n      {\n        \"name\": \"Affiliate\"\n      },\n      {\n        \"name\": \"FranchiseModel\"\n      },\n      {\n        \"name\": \"ProposalModel\"\n      },\n      {\n        \"name\": \"Admin > Permissions\"\n      },\n      {\n        \"name\": \"Admin > Roles\"\n      },\n      {\n        \"name\": \"Admin > Users\"\n      },\n      {\n        \"name\": \"Admin > User > Profile\"\n      },\n      {\n        \"name\": \"Admin > User > Settings\"\n      },\n      {\n        \"name\": \"Admin > Testimonials\"\n      },\n      {\n        \"name\": \"Admin > Reviews\"\n      },\n      {\n        \"name\": \"Admin > Menu\"\n      },\n      {\n        \"name\": \"Admin > Menu > Category\"\n      },\n      {\n        \"name\": \"Admin > Menu > Product\"\n      },\n      {\n        \"name\": \"Admin > Franchise\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Taxes\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Product > Tags\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Admin > Ecommerce > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Retort > Products\"\n      },\n      {\n        \"name\": \"Admin > Retort > Product > Category\"\n      },\n      {\n        \"name\": \"Admin > Retort > Orders\"\n      },\n      {\n        \"name\": \"Admin > Retort > Invoices\"\n      },\n      {\n        \"name\": \"Admin > Logs > Audit-logs\"\n      },\n      {\n        \"name\": \"Admin > Logs > Email-logs\"\n      },\n      {\n        \"name\": \"Admin > Lead\"\n      },\n      {\n        \"name\": \"Admin > Contracts\"\n      },\n      {\n        \"name\": \"Payments\"\n      },\n      {\n        \"name\": \"Zoho Sign\"\n      },\n      {\n        \"name\": \"Admin > Lead > Follow Ups\"\n      },\n      {\n        \"name\": \"Frontend > Ecommerce > Products\"\n      },\n      {\n        \"name\": \"Frontend > Reviews\"\n      },\n      {\n        \"name\": \"Frontend > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Profile\"\n      },\n      {\n        \"name\": \"Franchise > Settings\"\n      },\n      {\n        \"name\": \"Franchise > Ecommerce > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Retort > Orders\"\n      },\n      {\n        \"name\": \"Franchise > Testimonials\"\n      },\n      {\n        \"name\": \"Franchise > Reviews\"\n      },\n      {\n        \"name\": \"Customer > Profile\"\n      },\n      {\n        \"name\": \"Admin > Customer\"\n      },\n      {\n        \"name\": \"Customer > Settings\"\n      },\n      {\n        \"name\": \"Customer > Testimonials\"\n      },\n      {\n        \"name\": \"Customer > Reviews\"\n      },\n      {\n        \"name\": \"Users > address\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Leads\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Orders\"\n      },\n      {\n        \"name\": \"Admin > Analytics > Retort\"\n      },\n      {\n        \"name\": \"PetPooja\"\n      }\n    ],\n    \"paths\": {\n      \"/api/admin/region/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"code\",\n                    \"description\",\n                    \"isActive\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Northern Region\"\n                    },\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": \"Country Name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"Country Name\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Region created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Region by ID\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Region to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Region\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Region to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"code\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Region updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/region/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Regions\",\n          \"tags\": [\n            \"Regions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Regions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Region not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee\": {\n        \"post\": {\n          \"summary\": \"Create a new franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Contact phone number for this franchise location\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\",\n                          \"description\": \"Specific location or address of the franchise\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\",\n                          \"description\": \"City where the franchise location is situated\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\",\n                          \"description\": \"State or region for the franchise location\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\",\n                          \"description\": \"Country of the franchise location\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\",\n                          \"description\": \"Zip code or postal code for the franchise location\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"URL of the social media profile\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ],\n                            \"description\": \"Type of social media platform\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"Facebook\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"Twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Franchisee created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Retrieve all franchisees\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"franchiseType\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"Filter franchisees by type (e.g., super_franchise, franchise, master_franchise)\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of franchisees\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"ownerName\": {\n                          \"type\": \"string\"\n                        },\n                        \"contactEmail\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"franchiseLocations\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"establishedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"numberOfEmployees\": {\n                          \"type\": \"integer\"\n                        },\n                        \"investmentAmount\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\"\n                        },\n                        \"isActive\": {\n                          \"type\": \"boolean\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchisee/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a franchisee by ID\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the franchisee\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"ownerName\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing franchisee\",\n          \"tags\": [\n            \"Franchisee\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"The ID of the franchisee to update\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"ownerName\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactEmail\": {\n                      \"type\": \"string\"\n                    },\n                    \"contactNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"establishedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseAgreementSignedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"franchiseType\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"master_franchise\",\n                        \"super_franchise\",\n                        \"franchise\"\n                      ]\n                    },\n                    \"regionId\": {\n                      \"type\": \"string\"\n                    },\n                    \"userid\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"parentFranchise\": {\n                      \"type\": \"string\"\n                    },\n                    \"contractIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"ratings\": {\n                      \"type\": \"number\"\n                    },\n                    \"franchiseRenewalInfo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"renewalDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        },\n                        \"conditions\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"franchiseLocation\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contactPhone\": {\n                          \"type\": \"string\"\n                        },\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"socialMediaDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"fb\",\n                              \"instagram\",\n                              \"youtube\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"ABC Franchise\",\n                    \"ownerName\": \"John Doe\",\n                    \"contactEmail\": \"john.doe@abcfranchise.com\",\n                    \"contactNumber\": \"+1234567890\",\n                    \"establishedDate\": \"2010-05-20T00:00:00.000Z\",\n                    \"franchiseAgreementSignedDate\": \"2011-06-15T00:00:00.000Z\",\n                    \"franchiseType\": \"multi\",\n                    \"regionId\": \"region123\",\n                    \"contractIds\": [\n                      \"contract1\",\n                      \"contract2\"\n                    ],\n                    \"isActive\": true,\n                    \"ratings\": 4.5,\n                    \"franchiseRenewalInfo\": {\n                      \"renewalDate\": \"2025-12-01T00:00:00.000Z\",\n                      \"conditions\": \"Based on performance metrics\"\n                    },\n                    \"franchiseLocation\": {\n                      \"contactPhone\": \"+11234567890\",\n                      \"location\": \"Main Street 123\",\n                      \"city\": \"New York\",\n                      \"state\": \"NY\",\n                      \"country\": \"USA\",\n                      \"zipCode\": \"10001\"\n                    },\n                    \"socialMediaDetails\": [\n                      {\n                        \"url\": \"https://facebook.com/abcfranchise\",\n                        \"type\": \"fb\"\n                      },\n                      {\n                        \"url\": \"https://twitter.com/abcfranchise\",\n                        \"type\": \"twitter\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Franchisee updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid input\"\n            },\n            \"404\": {\n              \"description\": \"Franchisee not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/create\": {\n        \"post\": {\n          \"summary\": \"Create a new PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"franchiseeId\",\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"franchiseeId\": {\n                      \"type\": \"string\"\n                    },\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"checklistName\",\n                    \"pdiDate\",\n                    \"status\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"checklistName\": {\n                      \"type\": \"string\"\n                    },\n                    \"pdiDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a PDI Checklist by ID\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the PDI Checklist to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/pdi-checklist/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a PDI Checklist\",\n          \"tags\": [\n            \"Admin > PDI Checklist\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"PDI Checklist deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"PDI Checklist not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/email\": {\n        \"post\": {\n          \"summary\": \"Send an email with multiple files or multiple file paths\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"navdeepmatrixecho@gmail.com\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://storage.googleapis.com/node-auth-tt.appspot.com/uploads/1729154983687images.jfif?GoogleAccessId=firebase-adminsdk-mbmju%40node-auth-tt.iam.gserviceaccount.com&Expires=3306991783&Signature=S%2F2ymjSl%2BHhgBHDDCBDNpm5sg5aSXMnhv4VXYRcJMc%2BkoXBlPXV2JPHiq%2B0tPc1wKz8jxCVURejWzE9lOjJg1Flld9bmHkjbpNC%2FWaZVBreBNAUG0KMaJgT6qiNP8qNbbK2NVzJRPLM%2BDbiTl6wEgO6llVX99uADsyQcS46AgAh3ibdAhxvpivygfyy1yERsWC%2FNCMyJoUcWp7FnpWhB5EezzLzjVkHhKrkpk8w3Py6qeuC3SsCkn8IXWxiw4zPD%2FZ5vptIhEtKzehiC6AKdFEi4XoJgBglMBzM9%2F2yCfW2v0ebIYkWYr1f8HsaoDg2F4NM0ZEBORK6rns4Mwd4b4w%3D%3D\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    },\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      },\n                      \"description\": \"List of files to be uploaded\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Email Sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/quick-actions/whatsapp\": {\n        \"post\": {\n          \"summary\": \"Send a WhatsApp notification with optional attachments\",\n          \"tags\": [\n            \"QuickActions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"to\": {\n                      \"type\": \"string\",\n                      \"description\": \"WhatsApp phone number in international format (e.g., +1234567890)\",\n                      \"example\": \"+911234567890\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"description\": \"Message body to be sent\",\n                      \"example\": \"Hello, your order is ready!\"\n                    },\n                    \"filePaths\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file paths for media attachments\",\n                      \"example\": \"[{\\\"path\\\": \\\"https://example.com/file1.jpg\\\", \\\"name\\\": \\\"file1.jpg\\\"}, {\\\"path\\\": \\\"https://example.com/file2.jpg\\\", \\\"name\\\": \\\"file2.jpg\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"WhatsApp message sent successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"WhatsApp message sent\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"details\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"message\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            },\n                            \"context\": {\n                              \"type\": \"object\",\n                              \"additionalProperties\": true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/files/search\": {\n        \"get\": {\n          \"summary\": \"Search for files by name, message\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the file to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the file\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of files matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/\": {\n        \"post\": {\n          \"summary\": \"Upload multiple files with individual names, messages, and recommended status\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"fileDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"This is file 1\\\", \\\"recommended\\\": \\\"true\\\"}, {\\\"name\\\": \\\"file2.jpg\\\", \\\"message\\\": \\\"This is file 2\\\", \\\"recommended\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/{id}\": {\n        \"put\": {\n          \"summary\": \"Update file details and optionally upload new files\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the file record to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"fileDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of file details\",\n                      \"example\": \"[{\\\"name\\\": \\\"file1.jpg\\\", \\\"message\\\": \\\"Updated message\\\", \\\"recommended\\\": true}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a file\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the file to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"File deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"File not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/files/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Files\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/search\": {\n        \"get\": {\n          \"summary\": \"Search for images by name or message\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"name\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Name of the image to search for\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"message\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Message associated with the image\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images matching the search criteria\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery\": {\n        \"post\": {\n          \"summary\": \"Upload multiple images with individual names, messages, and caption status\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"files\",\n                    \"imageDetails\"\n                  ],\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        },\n        \"get\": {\n          \"summary\": \"Get all images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of images\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"url\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/{id}\": {\n        \"delete\": {\n          \"summary\": \"Delete an image\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"description\": \"ID of the image to delete\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Image deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Bad request\"\n            },\n            \"404\": {\n              \"description\": \"Image not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update image details and optionally upload new images\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"The ID of the image to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"files\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                      }\n                    },\n                    \"imageDetails\": {\n                      \"type\": \"string\",\n                      \"description\": \"A JSON string representation of an array of image details\",\n                      \"example\": \"[{\\\"name\\\": \\\"image1.jpg\\\", \\\"message\\\": \\\"This is image 1\\\", \\\"caption\\\": \\\"true\\\"}, {\\\"name\\\": \\\"image2.jpg\\\", \\\"message\\\": \\\"This is image 2\\\", \\\"caption\\\": \\\"false\\\"}]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/gallery/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get by ID\",\n          \"tags\": [\n            \"Gallery\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\",\n              \"content\": {\n                \"application/json\": null\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Data not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Data not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/question/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"question\",\n                    \"type\",\n                    \"required\"\n                  ],\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\",\n                      \"example\": \"What is your favorite color?\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ],\n                      \"example\": \"single_choice\"\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      },\n                      \"example\": [\n                        {\n                          \"label\": \"Red\",\n                          \"value\": \"red\"\n                        },\n                        {\n                          \"label\": \"Blue\",\n                          \"value\": \"blue\"\n                        },\n                        {\n                          \"label\": \"Green\",\n                          \"value\": \"green\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Questions Question created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Questions Question by ID\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Questions Question\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Questions Question to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"question\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"boolean\",\n                        \"string\",\n                        \"multi_choice\",\n                        \"single_choice\",\n                        \"number\"\n                      ]\n                    },\n                    \"required\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"options\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"label\": {\n                            \"type\": \"string\",\n                            \"example\": \"Red\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"example\": \"red\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Question updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Question not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/question/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete Questions Questions\",\n          \"tags\": [\n            \"Questions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Questions Questions deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Questions Questions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/list\": {\n        \"get\": {\n          \"summary\": \"Get all\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Data retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a submission by ID\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the submission\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submission retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Submission not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-submissions/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete multiple submissions\",\n          \"tags\": [\n            \"Campaign Submissions\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Submissions deleted successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/create\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"franchiseId\",\n                    \"region\",\n                    \"questionList\",\n                    \"startDate\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"Summer Campaign\"\n                    },\n                    \"franchiseId\": {\n                      \"type\": \"string\",\n                      \"example\": \"franchiseId\"\n                    },\n                    \"region\": {\n                      \"type\": \"string\",\n                      \"example\": \"punjab\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"A campaign for summer promotions\"\n                    },\n                    \"startDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-06-01T00:00:00Z\"\n                    },\n                    \"endDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"2024-08-31T23:59:59Z\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                      },\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a campaign Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    },\n                    \"startDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"endDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"questionList\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/campaign-ad/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete campaigns Ad\",\n          \"tags\": [\n            \"Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaigns not found\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/save\": {\n        \"post\": {\n          \"summary\": \"Create a new campaign submission\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\",\n                      \"description\": \"The ID of the campaign associated with the submission\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                    },\n                    \"response\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual response provided by the user\",\n                      \"example\": \"This is my response to the campaign.\"\n                    }\n                  },\n                  \"required\": [\n                    \"campaignId\",\n                    \"response\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Campaign submission created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Created successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier for the submission\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174001\"\n                          },\n                          \"campaignId\": {\n                            \"type\": \"string\",\n                            \"description\": \"ID of the associated campaign\",\n                            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n                          },\n                          \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual response provided by the user\",\n                            \"example\": \"This is my response to the campaign.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request, missing required fields\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/list\": {\n        \"get\": {\n          \"summary\": \"Get all campaigns Ad\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaigns retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/campaign-ad/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a campaign Ad by ID\",\n          \"tags\": [\n            \"Frontend > Campaigns-Ad\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Affiliate created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type is required.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/list\": {\n        \"get\": {\n          \"summary\": \"Get all Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Search term to filter Affiliates\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"sorting\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"default\": \"\"\n              },\n              \"required\": false,\n              \"description\": \"Sorting criteria (e.g., \\\"type:asc\\\")\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/AffiliateModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of Affiliates\",\n                        \"example\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Size must be a positive integer.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get an Affiliate by ID\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update an Affiliate\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the Affiliate to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AffiliateModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliate updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/AffiliateModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"Type must be a string.\",\n                          \"Codes must be an object.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Affiliate not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Affiliate not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/affiliate/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more Affiliates\",\n          \"tags\": [\n            \"Affiliate\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"description\": \"Array of Affiliate IDs to delete\",\n                      \"example\": [\n                        \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"223e4567-e89b-12d3-a456-426614174001\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Affiliates deleted successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deletedCount\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of Affiliates deleted\",\n                        \"example\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"errors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"example\": [\n                          \"At least one ID is required.\",\n                          \"Each ID must be a valid UUID.\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"One or more Affiliates not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"One or more Affiliates not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"FranchiseModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/FranchiseModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of FranchiseModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a FranchiseModel by ID\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a FranchiseModel\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the FranchiseModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FranchiseModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/FranchiseModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"FranchiseModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"FranchiseModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/franchise-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more FranchiseModels\",\n          \"tags\": [\n            \"FranchiseModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"FranchiseModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/create\": {\n        \"post\": {\n          \"summary\": \"Create a new ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"ProposalModel created successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/list\": {\n        \"get\": {\n          \"summary\": \"Get all ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"required\": false,\n              \"description\": \"Number of records to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"required\": false,\n              \"description\": \"Number of records to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/ProposalModel\"\n                        }\n                      },\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of ProposalModels\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Invalid query parameters\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a ProposalModel by ID\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a ProposalModel\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"description\": \"ID of the ProposalModel to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProposalModel\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModel updated successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/ProposalModel\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request body or parameters\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"ProposalModel not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"ProposalModel not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/Proposal-model/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete one or more ProposalModels\",\n          \"tags\": [\n            \"ProposalModel\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"example\": [\n                        \"uuid1\",\n                        \"uuid2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProposalModels deleted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Validation error message\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/place-order\": {\n        \"get\": {\n          \"summary\": \"PetPooja order\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"order not found\"\n            }\n          }\n        }\n      },\n      \"/api/pet-pooja/inventory\": {\n        \"get\": {\n          \"summary\": \"PetPooja inventory\",\n          \"tags\": [\n            \"PetPooja\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"inventory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"type\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"inventory not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/send-document\": {\n        \"post\": {\n          \"summary\": \"create-document\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"templateId\",\n                    \"contractId\",\n                    \"recipientName\",\n                    \"recipientEmail\",\n                    \"prefilledValues\",\n                    \"notes\"\n                  ],\n                  \"properties\": {\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"default\": 72565000000032720\n                    },\n                    \"recipientName\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"recipientEmail\": {\n                      \"type\": \"string\",\n                      \"default\": \"navdeepsaroya4@gmail.com\"\n                    },\n                    \"contractId\": {\n                      \"type\": \"string\"\n                    },\n                    \"prefilledValues\": {\n                      \"type\": \"string\",\n                      \"default\": \"{\\\"Name-:\\\": \\\"navdeep12\\\", \\\"Signature-:\\\": \\\"echo12\\\", \\\"Date-:\\\": \\\"today12\\\"}\"\n                    },\n                    \"notes\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign send successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/templates\": {\n        \"get\": {\n          \"summary\": \"get templates\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign created successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/get-fields/{templateId}\": {\n        \"get\": {\n          \"summary\": \"get all fields by template ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"templateId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the template to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"All template fields retreived\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/document/{documentId}\": {\n        \"get\": {\n          \"summary\": \"get all details by document ID\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"documentId\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the document to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Zoho Sign doc retreived successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Zoho Sign not found\"\n            }\n          }\n        }\n      },\n      \"/api/zoho-sign/callback\": {\n        \"post\": {\n          \"summary\": \"Handle webhook notifications from Zoho Sign\",\n          \"tags\": [\n            \"Zoho Sign\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"notifications\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"performed_by_email\": {\n                          \"type\": \"string\",\n                          \"example\": \"user@example.com\"\n                        },\n                        \"performed_by_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"John Doe\"\n                        },\n                        \"performed_at\": {\n                          \"type\": \"integer\",\n                          \"example\": 1695296200000\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document signed successfully.\"\n                        },\n                        \"activity\": {\n                          \"type\": \"string\",\n                          \"example\": \"Signing\"\n                        },\n                        \"operation_type\": {\n                          \"type\": \"string\",\n                          \"example\": \"RequestSigningSuccess\"\n                        },\n                        \"action_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"123456789\"\n                        },\n                        \"ip_address\": {\n                          \"type\": \"string\",\n                          \"example\": \"192.168.1.1\"\n                        }\n                      }\n                    },\n                    \"requests\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"request_name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Document Signing Request\"\n                        },\n                        \"request_id\": {\n                          \"type\": \"string\",\n                          \"example\": \"requestId12345\"\n                        },\n                        \"document_ids\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"document_name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Contract Document\"\n                              },\n                              \"document_id\": {\n                                \"type\": \"string\",\n                                \"example\": \"signedDoc123\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully processed the webhook notification\"\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Invalid input data\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized - Invalid token\"\n            },\n            \"404\": {\n              \"description\": \"Not Found - Requested resource does not exist\"\n            }\n          }\n        }\n      },\n      \"/api/referral\": {\n        \"post\": {\n          \"summary\": \"Create a referral for user\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/referral/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Get a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"referral_code of the Referral to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"referral_code of the Referral to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/referral/validate/{referral_code}\": {\n        \"get\": {\n          \"summary\": \"Validate a Referral by code\",\n          \"tags\": [\n            \"Referral\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"referral_code\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Referral code to validate\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Referral code is valid\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"valid\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid referral code format\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Referral not found\"\n            }\n          }\n        }\n      },\n      \"/api/auth/verify-password-token\": {\n        \"post\": {\n          \"summary\": \"Verify password reset token\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Token is valid\"\n            },\n            \"400\": {\n              \"description\": \"Invalid token\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/auth/create-password\": {\n        \"post\": {\n          \"summary\": \"Create a password for the user\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"token\",\n                    \"new_password\"\n                  ],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JWT token sent to the user for password reset verification\"\n                    },\n                    \"new_password\": {\n                      \"type\": \"string\",\n                      \"description\": \"The new password for the user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Password created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Address by ID\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Address to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Address to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Address to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"street\",\n                    \"city\",\n                    \"state\",\n                    \"postalCode\",\n                    \"country\"\n                  ],\n                  \"properties\": {\n                    \"street\": {\n                      \"type\": \"string\",\n                      \"default\": \"street\"\n                    },\n                    \"city\": {\n                      \"type\": \"string\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"string\",\n                      \"default\": \"state\"\n                    },\n                    \"postalCode\": {\n                      \"type\": \"string\",\n                      \"default\": \"postalCode\"\n                    },\n                    \"country\": {\n                      \"type\": \"string\",\n                      \"default\": \"country\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/user/address/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Address\",\n          \"tags\": [\n            \"Users > address\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Address deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Address not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/test-user/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Test User\",\n          \"tags\": [\n            \"AUTH\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/register\": {\n        \"post\": {\n          \"summary\": \"Register User\",\n          \"tags\": [\n            \"Customer > Register\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Customer\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/customer/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Customer\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/create\": {\n        \"post\": {\n          \"summary\": \"Create a new franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\",\n                    \"referralBy\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"Franchise\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"referralBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all franchisees\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchisees retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a franchise by ID\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the franchise to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the franchise to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/franchise/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a franchise\",\n          \"tags\": [\n            \"Admin > Franchise\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"franchise deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"franchise not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/create\": {\n        \"post\": {\n          \"summary\": \"Create a new permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permission created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all permissions\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a permission by ID\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permission to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the permissions to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/permissions/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update permission\",\n          \"tags\": [\n            \"Admin > Permissions\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the permissions to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admin\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"permissions updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"permissions not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Admin > User > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/create\": {\n        \"post\": {\n          \"summary\": \"Create a new roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRole\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all roles\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a role by ID\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the role to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the roles to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the roles to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"role_permissions\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminRoleNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"description\"\n                    },\n                    \"role_permissions\": {\n                      \"type\": \"text\",\n                      \"default\": \"{\\\"user\\\":[\\\"create\\\",\\\"update\\\",\\\"delete\\\",\\\"read\\\"]}\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"roles updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/roles/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a role\",\n          \"tags\": [\n            \"Admin > Roles\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        \"1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"role deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"roles not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/settings/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/Settings/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Admin > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/create\": {\n        \"post\": {\n          \"summary\": \"Create a new User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"password\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin@gmail.com\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"default\": \"admin\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list-all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get admin Users\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Users retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a User by ID\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the User to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the User to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"userName\",\n                    \"phoneNumber\",\n                    \"status\",\n                    \"role\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"userName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"role\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"User updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/users/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a User\",\n          \"tags\": [\n            \"Admin > Users\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Franchise > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Franchise > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Profile Image\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/profile\": {\n        \"get\": {\n          \"summary\": \"Get a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/profile/\": {\n        \"put\": {\n          \"summary\": \"Update a Profile\",\n          \"tags\": [\n            \"Customer > Profile\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Profile to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"profilePhoto\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePhoto\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Profile updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Profile not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/settings\": {\n        \"get\": {\n          \"summary\": \"Get a Settings by ID\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Settings to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/Settings/update\": {\n        \"put\": {\n          \"summary\": \"Update a Settings\",\n          \"tags\": [\n            \"Customer > Settings\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Settings to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"full_name\",\n                    \"contact_number\",\n                    \"phone_code\",\n                    \"address\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"12@gmail.com\"\n                    },\n                    \"full_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"contact_number\": {\n                      \"type\": \"string\"\n                    },\n                    \"phone_code\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"string\"\n                    },\n                    \"active\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Settings updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Settings not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/create\": {\n        \"post\": {\n          \"summary\": \"Create a new order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"trackingNumber\",\n                    \"shippingAddress\",\n                    \"totalPrice\",\n                    \"cart_items\"\n                  ],\n                  \"properties\": {\n                    \"trackingNumber\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"shippingAddress\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"totalPrice\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"cart_items\": {\n                      \"type\": \"text\",\n                      \"default\": \"[0]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"order created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order Status by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/order/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a order\",\n          \"tags\": [\n            \"Admin > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Order to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminorderNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"product12\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"total_ratings\",\n                    \"ratings\",\n                    \"discount\",\n                    \"stock\",\n                    \"sold\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"example\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"example\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"example\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"old\",\n                        \"new\",\n                        \"upcoming\"\n                      ]\n                    },\n                    \"total_ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"ratings\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"discount\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"sold\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/assign-category\": {\n        \"post\": {\n          \"summary\": \"Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/unassign-category\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Un-Assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/create\": {\n        \"post\": {\n          \"summary\": \"Create a new product Tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Admintags\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all product Tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a tags by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the tags to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tag retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the product Tag to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a tags\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the product Tag to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdmintagsNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Tags updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/product/tag/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a tag\",\n          \"tags\": [\n            \"Admin > Ecommerce > Product > Tags\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"tags deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"product Tags not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax\": {\n        \"get\": {\n          \"summary\": \"Retrieve a list of all taxes\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"List of taxes retrieved successfully\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        },\n        \"post\": {\n          \"summary\": \"Create a new tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Tax created successfully\"\n            }\n          }\n        }\n      },\n      \"/api/admin/tax/{id}\": {\n        \"get\": {\n          \"summary\": \"Retrieve a tax by ID\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax retrieved successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"summary\": \"Update an existing tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"rate\": {\n                      \"type\": \"number\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"example\": {\n                    \"name\": \"VAT\",\n                    \"rate\": 5.5,\n                    \"isActive\": true\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Tax updated successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete a tax\",\n          \"tags\": [\n            \"Admin > Ecommerce > Taxes\"\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Tax ID\"\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"Tax deleted successfully\"\n            },\n            \"404\": {\n              \"description\": \"Tax not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/all?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/product/get/type\": {\n        \"get\": {\n          \"summary\": \"Get a Product by Tag\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Limit of the Products to retrieve\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"type\",\n              \"required\": true,\n              \"default\": \"new\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"(new or upcoming) Type of the Products to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"limit of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/{slug}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by slug\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"slug\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Slug of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Slug of the product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/product/search?search={search}\": {\n        \"get\": {\n          \"summary\": \"Get Products by search\",\n          \"tags\": [\n            \"Frontend > Ecommerce > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"search\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Products by search to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"Products by search to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Ecommerce > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Product Category Image\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Product Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategory\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all ProductCategory\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Category by ID\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"ProductCategory retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the ProductCategory to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the ProductCategory to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCategoryNew\"\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"ProductCategory not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Category\",\n          \"tags\": [\n            \"Admin > Retort > Product > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Product Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload product Image\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"product12\"\n                    },\n                    \"description\": {\n                      \"type\": \"text\",\n                      \"default\": \"desc\"\n                    },\n                    \"price\": {\n                      \"type\": \"text\",\n                      \"default\": 123\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"new\"\n                    },\n                    \"stock\": {\n                      \"type\": \"integer\",\n                      \"default\": 10\n                    },\n                    \"active\": {\n                      \"type\": \"boolean\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all products\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Product by ID\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the products to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the products to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"description\",\n                    \"price\",\n                    \"type\",\n                    \"stock\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminProductNew\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"descr\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 178\n                    },\n                    \"type\": {\n                      \"type\": \"text\",\n                      \"default\": \"upcoming\"\n                    },\n                    \"stock\": {\n                      \"type\": \"number\",\n                      \"default\": 52\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"products updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/retort/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Product\",\n          \"tags\": [\n            \"Admin > Retort > Products\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"products not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Order\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/api/retort/order/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get Order by ID\",\n          \"tags\": [\n            \"Franchise > Retort > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Order to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order status retreived successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Order to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today/{assignedTo}\": {\n        \"get\": {\n          \"summary\": \"Get today's follow-ups for a specific assigned user\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"assignedTo\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the assigned user\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Bad Request - Assigned user ID is required\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Follow-ups not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/followup/today\": {\n        \"get\": {\n          \"summary\": \"Get all leads with follow-ups scheduled for today\",\n          \"tags\": [\n            \"Admin > Lead > Follow Ups\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads with today's follow-ups retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                          \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\"\n                        },\n                        \"email\": {\n                          \"type\": \"string\"\n                        },\n                        \"followDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"followedDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\"\n                              },\n                              \"followedBy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"notes\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"status\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"No leads found with today's follow-ups\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Lead to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"phoneNumber\",\n                    \"email\",\n                    \"address\",\n                    \"additionalInfo\",\n                    \"status\",\n                    \"referBy\",\n                    \"assign\",\n                    \"followDetails\",\n                    \"source\",\n                    \"sourceInfo\",\n                    \"notes\",\n                    \"logs\",\n                    \"proposalModals\",\n                    \"franchiseModals\",\n                    \"affiliate\",\n                    \"marketing\",\n                    \"other\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"address\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\"\n                        },\n                        \"city\": {\n                          \"type\": \"string\"\n                        },\n                        \"state\": {\n                          \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"country\": {\n                          \"type\": \"string\"\n                        },\n                        \"PAN\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"referBy\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"assign\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assignedTo\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedBy\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"userName\": {\n                              \"type\": \"string\"\n                            },\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"assignedDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                        }\n                      }\n                    },\n                    \"followDetails\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"followedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"followedBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"notes\": {\n                            \"type\": \"string\"\n                          },\n                          \"description\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"reminder\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"createdBy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"source\": {\n                      \"type\": \"string\"\n                    },\n                    \"sourceInfo\": {\n                      \"type\": \"string\"\n                    },\n                    \"notes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"note\": {\n                            \"type\": \"string\"\n                          },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"logs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"events\": {\n                            \"type\": \"string\"\n                          },\n                          \"timeline\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                          },\n                          \"userDetails\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"userName\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"proposalModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"franchiseModals\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"affiliate\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    },\n                    \"marketing\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"other\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": null\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Leads\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a lead by ID\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/assign-lead\": {\n        \"put\": {\n          \"summary\": \"Assign lead to other users\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"assignedTo\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"assignedTo\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"userName\": {\n                          \"type\": \"string\"\n                        },\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead assigned successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/get-status/{id}\": {\n        \"get\": {\n          \"summary\": \"Get status for lead\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the lead to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status retrieved successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Lead not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/lead/convert-lead\": {\n        \"post\": {\n          \"summary\": \"Convert Lead to franchisee\",\n          \"tags\": [\n            \"Admin > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead converted successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Lead\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"firstName\",\n                    \"lastName\",\n                    \"email\",\n                    \"city\",\n                    \"state\",\n                    \"zip_code\",\n                    \"country\",\n                    \"phoneNumber\",\n                    \"address\",\n                    \"additional_info\"\n                  ],\n                  \"properties\": {\n                    \"firstName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"lastName\": {\n                      \"type\": \"string\",\n                      \"default\": \"lead\"\n                    },\n                    \"email\": {\n                      \"type\": \"text\",\n                      \"default\": \"email\"\n                    },\n                    \"city\": {\n                      \"type\": \"text\",\n                      \"default\": \"city\"\n                    },\n                    \"state\": {\n                      \"type\": \"text\",\n                      \"default\": \"state\"\n                    },\n                    \"zip_code\": {\n                      \"type\": \"text\",\n                      \"default\": \"zip_code\"\n                    },\n                    \"country\": {\n                      \"type\": \"text\",\n                      \"default\": \"country\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"text\",\n                      \"default\": \"phone_number\"\n                    },\n                    \"address\": {\n                      \"type\": \"text\",\n                      \"default\": \"address\"\n                    },\n                    \"additional_info\": {\n                      \"type\": \"text\",\n                      \"default\": \"additional_info\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead submit successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/lead/list\": {\n        \"get\": {\n          \"summary\": \"List Leads\",\n          \"tags\": [\n            \"Frontend > Lead\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by first name\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Offset for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting options, e.g. 'name ASC, createdAt DESC'\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Successfully retrieved leads\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"total\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of leads\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"firstName\": {\n                              \"type\": \"string\"\n                            },\n                            \"lastName\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"city\": {\n                              \"type\": \"string\"\n                            },\n                            \"state\": {\n                              \"type\": \"string\"\n                            },\n                            \"zip_code\": {\n                              \"type\": \"string\"\n                            },\n                            \"country\": {\n                              \"type\": \"string\"\n                            },\n                            \"phoneNumber\": {\n                              \"type\": \"string\"\n                            },\n                            \"address\": {\n                              \"type\": \"string\"\n                            },\n                            \"additional_info\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid query parameters\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/customer/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Customer > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Franchise > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Testimonials by ID\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"ID of the Testimonials to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the Testimonials to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Testimonials to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"testimonial_text\",\n                    \"rating\",\n                    \"date_submitted\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"testimonial_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminTestimonials\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"date_submitted\": {\n                      \"type\": \"date\",\n                      \"default\": \"2/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/testimonials/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Testimonials\",\n          \"tags\": [\n            \"Admin > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Testimonials not found\"\n            }\n          }\n        }\n      },\n      \"/api/testimonials/get?size={size}&skip={skip}&rating={rating}\": {\n        \"get\": {\n          \"summary\": \"Get all Testimonials\",\n          \"tags\": [\n            \"Frontend > Testimonials\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"rating\",\n              \"default\": 2,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Testimonials retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Customer > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Franchise > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\",\n                    \"item_id\",\n                    \"item_type\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    },\n                    \"item_id\": {\n                      \"type\": \"number\",\n                      \"default\": 12\n                    },\n                    \"item_type\": {\n                      \"type\": \"text\",\n                      \"default\": \"product\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Review by ID\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Reviews to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Review\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Reviews to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"review_text\",\n                    \"rating\",\n                    \"review_date\",\n                    \"approved\"\n                  ],\n                  \"properties\": {\n                    \"review_text\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminReviews\"\n                    },\n                    \"rating\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"review_date\": {\n                      \"type\": \"string\",\n                      \"default\": \"02/02/2024\"\n                    },\n                    \"approved\": {\n                      \"type\": \"number\",\n                      \"default\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/reviews/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Reviews\",\n          \"tags\": [\n            \"Admin > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Reviews not found\"\n            }\n          }\n        }\n      },\n      \"/api/reviews/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Reviews\",\n          \"tags\": [\n            \"Frontend > Reviews\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Reviews retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/payments/generate-link\": {\n        \"post\": {\n          \"summary\": \"Generate a payment link\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"contract_id\"\n                  ],\n                  \"properties\": {\n                    \"contract_id\": {\n                      \"type\": \"string\",\n                      \"default\": \"3cd37ab0-7d00-4861-b373-93ec63bf1f32\",\n                      \"description\": \"contract Id\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment link generated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/payments/fetch-payment/{paymentId}\": {\n        \"get\": {\n          \"summary\": \"Fetch payment details by payment ID\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"paymentId\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Unique identifier for the payment\",\n              \"example\": \"payment_1234567890\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Payment details retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": true\n                      },\n                      \"payment\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"example\": \"payment_1234567890\"\n                          },\n                          \"amount\": {\n                            \"type\": \"number\",\n                            \"example\": 100\n                          },\n                          \"currency\": {\n                            \"type\": \"string\",\n                            \"example\": \"USD\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"example\": \"completed\"\n                          },\n                          \"created_at\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2023-09-20T12:00:00Z\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthorized access.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Payment not found\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Payment not found.\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Internal server error.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/payments/callback\": {\n        \"get\": {\n          \"summary\": \"Razorpay webhook callback handler\",\n          \"description\": \"Handles Razorpay webhook events such as payment captured and payment failed.\",\n          \"tags\": [\n            \"Payments\"\n          ],\n          \"security\": [\n            {\n              \"none\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"event\",\n                    \"payload\"\n                  ],\n                  \"properties\": {\n                    \"entity\": {\n                      \"type\": \"string\",\n                      \"description\": \"The entity type, which is usually 'event' for webhook events.\",\n                      \"example\": \"event\"\n                    },\n                    \"account_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Razorpay account ID.\",\n                      \"example\": \"acc_BFQ7uQEaa7j2z7\"\n                    },\n                    \"event\": {\n                      \"type\": \"string\",\n                      \"description\": \"The event type triggered by Razorpay (e.g., 'payment.captured', 'payment.failed').\",\n                      \"example\": \"payment.captured\"\n                    },\n                    \"contains\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of entities included in the event payload.\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"payment\"\n                      ]\n                    },\n                    \"payload\": {\n                      \"type\": \"object\",\n                      \"description\": \"Event-specific payload, including payment details.\",\n                      \"properties\": {\n                        \"payment\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entity\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"pay_DESlfW9H8K9uqM\"\n                                },\n                                \"entity\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"payment\"\n                                },\n                                \"amount\": {\n                                  \"type\": \"number\",\n                                  \"example\": 100\n                                },\n                                \"currency\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"INR\"\n                                },\n                                \"status\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"captured\"\n                                },\n                                \"method\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"netbanking\"\n                                },\n                                \"bank\": {\n                                  \"type\": \"string\",\n                                  \"example\": \"HDFC\"\n                                },\n                                \"created_at\": {\n                                  \"type\": \"integer\",\n                                  \"example\": 1567674599\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"parameters\": [\n            {\n              \"in\": \"header\",\n              \"name\": \"x-razorpay-signature\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"required\": true,\n              \"description\": \"Razorpay signature to verify webhook authenticity.\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Webhook received and verified\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Webhook received and verified\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid signature or request body\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Invalid signature\"\n                  }\n                }\n              }\n            },\n            \"500\": {\n              \"description\": \"Internal server error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"Internal server error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign menu to category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"menuId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"menuId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Category Image\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"image\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"image\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Category by ID\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Category to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Category to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/category/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Category\",\n          \"tags\": [\n            \"Admin > Menu > Category\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/assign\": {\n        \"post\": {\n          \"summary\": \"Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category linked successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/map/unassign\": {\n        \"post\": {\n          \"summary\": \"Un-Assign Category to Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"productId\",\n                    \"categoryId\"\n                  ],\n                  \"properties\": {\n                    \"productId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"categoryId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Category unlinked successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Category not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Product Image\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu Categories\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu Product by ID\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu Product to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu Product to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"slug\",\n                    \"description\",\n                    \"images\",\n                    \"price\",\n                    \"active\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\",\n                      \"default\": \"slug\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"default\": \"description\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"imagename\"\n                    },\n                    \"price\": {\n                      \"type\": \"number\",\n                      \"default\": 750\n                    },\n                    \"active\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/product/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu Product\",\n          \"tags\": [\n            \"Admin > Menu > Product\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Product deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu Product not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/image/upload\": {\n        \"post\": {\n          \"summary\": \"Upload Menu Image\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file\"\n                  ],\n                  \"properties\": {\n                    \"file\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu Image Uploaded successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminMenu\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"inactive\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Menu by ID\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Menu to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Menu to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"images\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"Menu\"\n                    },\n                    \"images\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"default\": \"active\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/menu/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Menu\",\n          \"tags\": [\n            \"Admin > Menu\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Menu deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Menu not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-timeline\": {\n        \"get\": {\n          \"summary\": \"Get lead timeline\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-by-status-type\": {\n        \"get\": {\n          \"summary\": \"Get lead status by status type analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"statusType\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"statusType\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"new\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status-franchise-id\": {\n        \"get\": {\n          \"summary\": \"Get lead status by franchise id analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            },\n            {\n              \"name\": \"franchiseId\",\n              \"in\": \"query\",\n              \"required\": true,\n              \"description\": \"franchiseId\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": 136546897\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-sources\": {\n        \"get\": {\n          \"summary\": \"Get lead sources analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead sources analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/lead-status\": {\n        \"get\": {\n          \"summary\": \"Get lead status analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"filter via \\\"this_week\\\", \\\"last_week\\\", \\\"this_month\\\", \\\"last_month\\\", \\\"this_year\\\", \\\"last_year\\\",\\\"custom\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_week\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Lead status analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/conversion-rate?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get conversion rate analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Conversion rate analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/sales-pipeline?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get sales pipeline analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Sales pipeline analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/leads/list\": {\n        \"get\": {\n          \"summary\": \"Retrieve a paginated list of leads with filters, search, and sorting options\",\n          \"tags\": [\n            \"Admin > Analytics > Leads\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"size\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to retrieve per page (pagination size)\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 100\n              }\n            },\n            {\n              \"name\": \"skip\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Number of leads to skip (offset) for pagination\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              }\n            },\n            {\n              \"name\": \"search\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Search term to filter leads by name or other searchable fields\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"John Doe\"\n              }\n            },\n            {\n              \"name\": \"sorting\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Sorting criteria, e.g., \\\"id DESC\\\" or \\\"createdAt ASC\\\"\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"id DESC\"\n              }\n            },\n            {\n              \"name\": \"filter\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Filter by time range, e.g., \\\"this_week\\\", \\\"last_week\\\", etc.\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"this_year\"\n              }\n            },\n            {\n              \"name\": \"startDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom start date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-01-01\"\n              }\n            },\n            {\n              \"name\": \"endDate\",\n              \"in\": \"query\",\n              \"required\": false,\n              \"description\": \"Custom end date for filtering leads (used with 'custom' filter)\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2024-12-31\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Leads retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"Response status\",\n                        \"example\": \"success\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Success message\",\n                        \"example\": \"Leads fetched successfully\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique lead ID\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Name of the lead\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"description\": \"Current status of the lead\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was created\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"format\": \"date-time\",\n                              \"description\": \"Date when the lead was last updated\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"500\": {\n              \"description\": \"Internal server error\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get order analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Time range for the order analytics\",\n              \"example\": \"Week\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Order analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request query\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/analytics/retort-supply?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Admin > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics data retrieved successfully.\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/customer/analytics/orders?range={range}\": {\n        \"get\": {\n          \"summary\": \"Get analytics\",\n          \"tags\": [\n            \"Customer > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"range\",\n              \"default\": \"Week\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Week\",\n                  \"Month\",\n                  \"Year\"\n                ]\n              },\n              \"description\": \"Get order analytics\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/orders?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get Analytics Orders\",\n          \"tags\": [\n            \"Franchise > Analytics > Orders\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Product Category retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/franchise/retort/sources?start_date={start_date}&end_date={end_date}\": {\n        \"get\": {\n          \"summary\": \"Get Lead sources\",\n          \"tags\": [\n            \"Franchise > Analytics > Retort\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Analytics retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Campiagn\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Campaign by ID\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Campaign to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Campaign to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"subject\",\n                    \"body\",\n                    \"scheduledAt\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminCampaignNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\",\n                      \"default\": \"body\"\n                    },\n                    \"scheduledAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": \"draft\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campaign not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campaign deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Campiagn not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/send-campaign\": {\n        \"post\": {\n          \"summary\": \"send-campaign\",\n          \"tags\": [\n            \"Admin > CRM > Campiagn\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Campiagn created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Email by ID\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Email to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Email to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"campaignId\",\n                    \"subscriberId\",\n                    \"status\"\n                  ],\n                  \"properties\": {\n                    \"campaignId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"subscriberId\": {\n                      \"type\": \"number\",\n                      \"default\": 1\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/email/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Email\",\n          \"tags\": [\n            \"Admin > CRM > Email\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Email deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Email not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"email\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"email\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Inquiry by ID\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Inquiry to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"email\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Inquiry to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"email\",\n                    \"subject\",\n                    \"message\",\n                    \"type\"\n                  ],\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminInquiryNew\"\n                    },\n                    \"subject\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"default\": \"scheduledAt\"\n                    },\n                    \"type\": {\n                      \"type\": \"boolean\",\n                      \"default\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/inquiry/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Inquiry\",\n          \"tags\": [\n            \"Admin > CRM > Inquiry\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Inquiry deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Inquiry not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/create\": {\n        \"post\": {\n          \"summary\": \"Create a new Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"email@gmail.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"default\": 10,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"Size of the retreived data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"default\": 0,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\"\n              },\n              \"description\": \"How many Rows want to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a Subscriber by ID\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"default\": 1,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"description\": \"ID of the Subscriber to retrieve\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"default\": 1,\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the Subscriber to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"email\",\n                    \"subscribedAt\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"default\": \"AdminSubscriberNew\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"default\": \"subject@gmai.com\"\n                    },\n                    \"subscribedAt\": {\n                      \"type\": \"string\",\n                      \"default\": \"2000-10-31T01:30:00.000-05:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/crm/subscriber/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete a Subscriber\",\n          \"tags\": [\n            \"Admin > CRM > Subscriber\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"default\": [\n                        1\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Subscriber deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Subscriber not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/create\": {\n        \"post\": {\n          \"summary\": \"Create a new contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"Contract created successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/list?size={size}&skip={skip}\": {\n        \"get\": {\n          \"summary\": \"Get all contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"query\",\n              \"name\": \"size\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              },\n              \"description\": \"Size of the retrieved data\"\n            },\n            {\n              \"in\": \"query\",\n              \"name\": \"skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              },\n              \"description\": \"How many rows to skip\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts retrieved successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/get/{id}\": {\n        \"get\": {\n          \"summary\": \"Get a contract by ID\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to retrieve\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract retrieved successfully\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/TContract\"\n                  }\n                }\n              }\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/update/{id}\": {\n        \"put\": {\n          \"summary\": \"Update a contract\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"parameters\": [\n            {\n              \"in\": \"path\",\n              \"name\": \"id\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"ID of the contract to update\"\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"status\",\n                    \"leadId\",\n                    \"templateId\",\n                    \"amount\",\n                    \"dueDate\",\n                    \"validity\",\n                    \"createdBy\"\n                  ],\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"draft\",\n                        \"active\",\n                        \"expired\",\n                        \"terminated\"\n                      ],\n                      \"example\": \"active\",\n                      \"description\": \"The status of the contract.\"\n                    },\n                    \"terminationDetails\": {\n                      \"type\": \"object\",\n                      \"description\": \"Details about the contract termination if applicable.\",\n                      \"properties\": {\n                        \"UserDetails\": {\n                          \"type\": \"object\",\n                          \"required\": true,\n                          \"description\": \"Details of the user initiating the termination.\"\n                        },\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"example\": \"Client requested termination\",\n                          \"description\": \"Reason for terminating the contract.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of termination.\"\n                        }\n                      }\n                    },\n                    \"payment\": {\n                      \"type\": \"object\",\n                      \"description\": \"Payment details associated with the contract.\",\n                      \"properties\": {\n                        \"paymentId\": {\n                          \"type\": \"string\",\n                          \"example\": \"payment123\",\n                          \"description\": \"ID of the payment.\"\n                        },\n                        \"amount\": {\n                          \"type\": \"number\",\n                          \"example\": 1500,\n                          \"description\": \"Amount paid.\"\n                        },\n                        \"date\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Date of payment.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"pending\",\n                            \"completed\",\n                            \"failed\"\n                          ],\n                          \"example\": \"pending\",\n                          \"description\": \"Status of the payment.\"\n                        },\n                        \"additionalInfo\": {\n                          \"type\": \"string\",\n                          \"example\": \"Payment processed via wire transfer\",\n                          \"description\": \"Additional information about the payment.\"\n                        }\n                      }\n                    },\n                    \"leadId\": {\n                      \"type\": \"string\",\n                      \"example\": \"lead123\",\n                      \"description\": \"ID of the lead associated with the contract.\"\n                    },\n                    \"templateId\": {\n                      \"type\": \"string\",\n                      \"example\": \"template456\",\n                      \"description\": \"ID of the template used for the contract.\"\n                    },\n                    \"amount\": {\n                      \"type\": \"number\",\n                      \"example\": 2500,\n                      \"description\": \"Total amount for the contract.\"\n                    },\n                    \"signedDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2023-09-20\",\n                      \"description\": \"Date when the contract was signed.\"\n                    },\n                    \"dueDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\",\n                      \"example\": \"2024-09-15\",\n                      \"description\": \"Due date for the contract.\"\n                    },\n                    \"validity\": {\n                      \"type\": \"object\",\n                      \"description\": \"Validity period of the contract.\",\n                      \"properties\": {\n                        \"from\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2023-09-15\",\n                          \"description\": \"Start date of the validity.\"\n                        },\n                        \"to\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"example\": \"2024-09-15\",\n                          \"description\": \"End date of the validity.\"\n                        }\n                      }\n                    },\n                    \"additionalInfo\": {\n                      \"type\": \"string\",\n                      \"example\": \"Additional contract details\",\n                      \"description\": \"Any additional information regarding the contract.\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin123\",\n                      \"description\": \"ID of the user who created the contract.\"\n                    },\n                    \"updatedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin456\",\n                      \"description\": \"ID of the user who last updated the contract.\"\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin789\",\n                      \"description\": \"ID of the user who deleted the contract, if applicable.\"\n                    },\n                    \"signedDocs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"docId\": {\n                            \"type\": \"string\",\n                            \"example\": \"signedDoc123\",\n                            \"description\": \"ID of the signed document.\"\n                          },\n                          \"sentBy\": {\n                            \"type\": \"object\",\n                            \"required\": true,\n                            \"description\": \"Details of the sender of the signed document.\"\n                          },\n                          \"createdAt\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-21\",\n                            \"description\": \"Creation date of the signed document.\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sent\",\n                              \"received\",\n                              \"signed\"\n                            ],\n                            \"example\": \"signed\",\n                            \"description\": \"Status of the signed document.\"\n                          },\n                          \"docLink\": {\n                            \"type\": \"string\",\n                            \"example\": \"https://example.com/signedDocument.pdf\",\n                            \"description\": \"Link to the signed document.\"\n                          },\n                          \"signedDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date\",\n                            \"example\": \"2023-09-22\",\n                            \"description\": \"Date when the document was signed.\"\n                          },\n                          \"notes\": {\n                            \"type\": \"string\",\n                            \"example\": \"Notes regarding the signed document.\",\n                            \"description\": \"Any notes related to the signed document.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"description\": \"Contract creation request body.\"\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contract updated successfully\"\n            },\n            \"400\": {\n              \"description\": \"Invalid request body\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contract not found\"\n            }\n          }\n        }\n      },\n      \"/api/admin/contracts/delete\": {\n        \"delete\": {\n          \"summary\": \"Delete contracts\",\n          \"tags\": [\n            \"Admin > Contracts\"\n          ],\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"requestBody\": {\n            \"required\": true,\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"ids\"\n                  ],\n                  \"properties\": {\n                    \"ids\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"1\",\n                        \"2\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Contracts deleted successfully\"\n            },\n            \"401\": {\n              \"description\": \"Unauthorized\"\n            },\n            \"404\": {\n              \"description\": \"Contracts not found\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"customOptions\": {}\n};\n  url = options.swaggerUrl || url\n  var urls = options.swaggerUrls\n  var customOptions = options.customOptions\n  var spec1 = options.swaggerDoc\n  var swaggerOptions = {\n    spec: spec1,\n    url: url,\n    urls: urls,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  }\n  for (var attrname in customOptions) {\n    swaggerOptions[attrname] = customOptions[attrname];\n  }\n  var ui = SwaggerUIBundle(swaggerOptions)\n\n  if (customOptions.oauth) {\n    ui.initOAuth(customOptions.oauth)\n  }\n\n  if (customOptions.preauthorizeApiKey) {\n    const key = customOptions.preauthorizeApiKey.authDefinitionKey;\n    const value = customOptions.preauthorizeApiKey.apiKeyValue;\n    if (!!key && !!value) {\n      const pid = setInterval(() => {\n        const authorized = ui.preauthorizeApiKey(key, value);\n        if(!!authorized) clearInterval(pid);\n      }, 500)\n\n    }\n  }\n\n  if (customOptions.authAction) {\n    ui.authActions.authorize(customOptions.authAction)\n  }\n\n  window.ui = ui\n}\n","responseTime":1,"status":200,"url":"/swagger-ui-init.js"},"timestamp":"2024-11-05T14:29:06.149Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"key":"phoneNumber","label":"phoneNumber","regex":{},"value":"string"},"message":"Phone number must be in international format (e.g., +1234567890).","path":["phoneNumber"],"type":"string.pattern.base"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":49,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:25.961Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"string\",\"email\":\"string\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T14:29:34.909Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T14:29:34.909Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T14:29:34.909Z\",\"createdAt\":\"2024-11-05T14:29:34.909Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Phone number must be in international format (e.g., +1234567890).\",\"path\":[\"phoneNumber\"],\"type\":\"string.pattern.base\",\"context\":{\"regex\":{},\"value\":\"string\",\"label\":\"phoneNumber\",\"key\":\"phoneNumber\"}}]}}","responseTime":52,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:25.964Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"string","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseTime":62,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:25.974Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"invalids":["string"],"key":"email","label":"email","value":"string"},"message":"Please provide a valid email address.","path":["email"],"type":"string.email"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":41,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:51.184Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+11234569870\",\"email\":\"string\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T14:29:34.909Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T14:29:34.909Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T14:29:34.909Z\",\"createdAt\":\"2024-11-05T14:29:34.909Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Please provide a valid email address.\",\"path\":[\"email\"],\"type\":\"string.email\",\"context\":{\"value\":\"string\",\"invalids\":[\"string\"],\"label\":\"email\",\"key\":\"email\"}}]}}","responseTime":59,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:51.200Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseTime":72,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:51.213Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"details":[{"context":{"invalids":["string"],"key":"email","label":"email","value":"string"},"message":"Please provide a valid email address.","path":["email"],"type":"string.email"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":2,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:52.242Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+11234569870\",\"email\":\"string\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"string\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":{\"assignedTo\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assignedDate\":\"2024-11-05T14:29:34.909Z\"},\"followDetails\":[{\"followedDate\":\"2024-11-05T14:29:34.909Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T14:29:34.909Z\",\"createdAt\":\"2024-11-05T14:29:34.909Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Please provide a valid email address.\",\"path\":[\"email\"],\"type\":\"string.email\",\"context\":{\"value\":\"string\",\"invalids\":[\"string\"],\"label\":\"email\",\"key\":\"email\"}}]}}","responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:52.243Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":{"assignedBy":{"id":"string","userName":"string"},"assignedDate":"2024-11-05T14:29:34.909Z","assignedTo":{"id":"string","userName":"string"}},"campaignId":"string","email":"string","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"string"},"method":"POST","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:32:52.245Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"status","label":"followDetails[0].status","valids":["followed-up","not-followed-up"],"value":"string"},"message":"Status must be one of: followed-up, not-followed-up.","path":["followDetails",0,"status"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":6,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:03.973Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+11234569870\",\"email\":\"jjj@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[{\"followedDate\":\"2024-11-05T14:29:34.909Z\",\"followedBy\":{\"userName\":\"string\",\"id\":\"string\"},\"notes\":\"string\",\"description\":\"string\",\"status\":\"string\",\"reminder\":\"2024-11-05T14:29:34.909Z\",\"createdAt\":\"2024-11-05T14:29:34.909Z\",\"createdBy\":{\"userName\":\"string\",\"id\":\"string\"}}],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Status must be one of: followed-up, not-followed-up.\",\"path\":[\"followDetails\",0,\"status\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"followed-up\",\"not-followed-up\"],\"label\":\"followDetails[0].status\",\"value\":\"string\",\"key\":\"status\"}}]}}","responseTime":9,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:03.976Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[{"createdAt":"2024-11-05T14:29:34.909Z","createdBy":{"id":"string","userName":"string"},"description":"string","followedBy":{"id":"string","userName":"string"},"followedDate":"2024-11-05T14:29:34.909Z","notes":"string","reminder":"2024-11-05T14:29:34.909Z","status":"string"}],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseTime":10,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:03.977Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"details":[{"context":{"key":"source","label":"source","valids":["admin","search","content","social-media","email-marketing","paid","event","referral"],"value":"string"},"message":"Source must be one of: admin, search, content, social-media, email-marketing, paid, event, referral.","path":["source"],"type":"any.only"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":2,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:20.614Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+11234569870\",\"email\":\"jjj@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[],\"source\":\"string\",\"sourceInfo\":\"string\",\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Source must be one of: admin, search, content, social-media, email-marketing, paid, event, referral.\",\"path\":[\"source\"],\"type\":\"any.only\",\"context\":{\"valids\":[\"admin\",\"search\",\"content\",\"social-media\",\"email-marketing\",\"paid\",\"event\",\"referral\"],\"label\":\"source\",\"value\":\"string\",\"key\":\"source\"}}]}}","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:20.616Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"string","sourceInfo":"string","status":"new"},"method":"POST","responseTime":5,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:20.617Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":null,"status":"new"},"method":"POST","responseBody":{"data":{"_original":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":null,"status":"new"},"details":[{"context":{"key":"id","label":"affiliate[0].id"},"message":"Affiliate ID is required.","path":["affiliate",0,"id"],"type":"any.required"}]},"error":true,"message":"Your request doesn't have valid parameters."},"responseTime":3,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:41.846Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":null,"status":"new"},"method":"POST","responseBody":"{\"error\":true,\"message\":\"Your request doesn't have valid parameters.\",\"data\":{\"_original\":{\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+11234569870\",\"email\":\"jjj@gmail.com\",\"address\":{\"address\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zipCode\":\"string\",\"country\":\"string\",\"PAN\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"userName\":\"string\",\"id\":\"string\"},\"assign\":null,\"followDetails\":[],\"source\":\"admin\",\"sourceInfo\":null,\"notes\":[{\"note\":\"string\",\"date\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"userName\":\"string\",\"id\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[{}],\"marketing\":[\"string\"],\"other\":[{}]},\"details\":[{\"message\":\"Affiliate ID is required.\",\"path\":[\"affiliate\",0,\"id\"],\"type\":\"any.required\",\"context\":{\"label\":\"affiliate[0].id\",\"key\":\"id\"}}]}}","responseTime":4,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:41.847Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[{}],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[{}],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":null,"status":"new"},"method":"POST","responseTime":6,"status":400,"url":"/create"},"timestamp":"2024-11-05T14:34:41.848Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":null,"status":"new"},"method":"POST","responseBody":{"data":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"campaignId":"string","createdAt":"2024-11-05T14:34:58.662Z","createdBy":"","deletedAt":null,"deletedBy":null,"email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"id":"d3c8e925-ab85-434f-b2a4-2df0099e033b","lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":null,"status":"new","updatedAt":"2024-11-05T14:34:58.664Z","updatedBy":null},"message":"Created successfully","success":true},"responseTime":114,"status":200,"url":"/create"},"timestamp":"2024-11-05T14:34:58.683Z"}
{"level":"info","message":{"body":{"additionalInfo":"string","address":{"PAN":"string","address":"string","city":"string","country":"string","state":"string","zipCode":"string"},"affiliate":[],"assign":null,"campaignId":"string","email":"jjj@gmail.com","firstName":"string","followDetails":[],"franchiseModals":["string"],"lastName":"string","logs":[{"events":"string","timeline":"2024-11-05T14:29:34.909Z","userDetails":{"id":"string","userName":"string"}}],"marketing":["string"],"notes":[{"date":"2024-11-05T14:29:34.909Z","note":"string","userDetails":{"id":"string","userName":"string"}}],"other":[],"phoneNumber":"+11234569870","proposalModals":["string"],"referBy":{"id":"string","userName":"string"},"source":"admin","sourceInfo":null,"status":"new"},"method":"POST","responseBody":"{\"success\":true,\"message\":\"Created successfully\",\"data\":{\"createdAt\":\"2024-11-05T14:34:58.662Z\",\"updatedAt\":\"2024-11-05T14:34:58.664Z\",\"id\":\"d3c8e925-ab85-434f-b2a4-2df0099e033b\",\"deletedAt\":null,\"campaignId\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"phoneNumber\":\"+11234569870\",\"email\":\"jjj@gmail.com\",\"address\":{\"PAN\":\"string\",\"city\":\"string\",\"state\":\"string\",\"address\":\"string\",\"country\":\"string\",\"zipCode\":\"string\"},\"additionalInfo\":\"string\",\"status\":\"new\",\"referBy\":{\"id\":\"string\",\"userName\":\"string\"},\"followDetails\":[],\"source\":\"admin\",\"sourceInfo\":null,\"notes\":[{\"date\":\"2024-11-05T14:29:34.909Z\",\"note\":\"string\",\"userDetails\":{\"id\":\"string\",\"userName\":\"string\"}}],\"logs\":[{\"events\":\"string\",\"timeline\":\"2024-11-05T14:29:34.909Z\",\"userDetails\":{\"id\":\"string\",\"userName\":\"string\"}}],\"proposalModals\":[\"string\"],\"franchiseModals\":[\"string\"],\"affiliate\":[],\"marketing\":[\"string\"],\"other\":[],\"createdBy\":\"\",\"updatedBy\":null,\"deletedBy\":null}}","responseTime":116,"status":200,"url":"/create"},"timestamp":"2024-11-05T14:34:58.684Z"}
